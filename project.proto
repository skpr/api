/** Service responsible for coordinating projects */
syntax = "proto3";

package workflow;

option go_package = "./pb";

service project {
  rpc Get (ProjectGetRequest) returns (ProjectGetResponse) {}
  rpc List (ProjectListRequest) returns (ProjectListResponse) {}
  rpc SetTags (SetTagsRequest) returns (SetTagsResponse) {}
  rpc GetTags (GetTagsRequest) returns (GetTagsResponse) {}
  rpc SetContact (SetContactRequest) returns (SetContactResponse) {}
  rpc GetContact (GetContactRequest) returns (GetContactResponse) {}
}

/**
 * Project status information
 */
message Project {
  string ID = 1; // Machine identifier of the project.
  string Name = 2; // Human readable name of the project.
  string Version = 3; // The current version released to production for this project.
  repeated string Environments = 4; // A list of environments.
  repeated string Tags = 5; // A list of tags assigned to this environment.
  string Contact = 6; // Primary contact information for this project.
  ProjectResourceTotals ResourceTotals = 7; // Total resources being utilised by all environments on this project.
  string Namespace = 8; // Kubernetes namespace which resources for this project reside.
  ProjectRegistry Registry = 9; // Container registry information for pushing and pulling images.
}

/**
 * Total resource utilisation across all environments for a project.
 */
message ProjectResourceTotals {
  int32 Replicas = 1; // Number of replicas utilising the total resources.
  int64 CPU = 2; // CPU utilised by all environments on this project.
  int64 Memory = 3; // Memory utilised by all environments on this project.
}

/**
 * Get project information
 */
message ProjectGetRequest {}

/**
 * Returns project information
 */
message ProjectGetResponse {
    string Namespace = 1; // Will be deprecated in a future release.
    ProjectRegistry Registry = 2; // Will be deprecated in a future release.
    Project Project = 3; // Project status information.
}

/**
 * Project registry information
 */
message ProjectRegistry {
    string Application = 1; // Application registry information
    string MySQL = 2; // MySQL registry information
}

/**
 * Request a list of projects from a Skpr platform cluster.
 */
message ProjectListRequest {}

/**
 * A list of all projects on this Skpr platform cluster.
 */
message ProjectListResponse {
    repeated Project Projects = 1;
}

/**
 * Input for setting tags on a Project.
 */
message SetTagsRequest {
  repeated string Tags = 1; // Tags to set on the Project.
}

/**
 * Output when setting tags.
 */
message SetTagsResponse {}

/**
 * Input for getting tags from a Project.
 */
message GetTagsRequest {}

/**
 * Output of tags from a Project.
 */
message GetTagsResponse {
  repeated string Tags = 1;
}

/**
 * Input for setting contact details on a Project.
 */
message SetContactRequest {
  string Contact = 1;
}

/**
 * Output provided when setting contact details.
 */
message SetContactResponse {}

/**
 * Input provided when getting project contact details.
 */
message GetContactRequest {}

/**
 * Output returned when getting project contact details.
 */
message GetContactResponse {
  string Contact = 1;
}
