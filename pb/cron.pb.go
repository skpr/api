//* Service responsible for coordinating environment cron

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: cron.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CronJobDetail_Phase int32

const (
	CronJobDetail_Pending   CronJobDetail_Phase = 0 // Default phase. Waiting to be executed.
	CronJobDetail_Running   CronJobDetail_Phase = 1 // Job is running
	CronJobDetail_Succeeded CronJobDetail_Phase = 2 // Job has completed
	CronJobDetail_Failed    CronJobDetail_Phase = 3 // Job has failed
)

// Enum value maps for CronJobDetail_Phase.
var (
	CronJobDetail_Phase_name = map[int32]string{
		0: "Pending",
		1: "Running",
		2: "Succeeded",
		3: "Failed",
	}
	CronJobDetail_Phase_value = map[string]int32{
		"Pending":   0,
		"Running":   1,
		"Succeeded": 2,
		"Failed":    3,
	}
)

func (x CronJobDetail_Phase) Enum() *CronJobDetail_Phase {
	p := new(CronJobDetail_Phase)
	*p = x
	return p
}

func (x CronJobDetail_Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CronJobDetail_Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_cron_proto_enumTypes[0].Descriptor()
}

func (CronJobDetail_Phase) Type() protoreflect.EnumType {
	return &file_cron_proto_enumTypes[0]
}

func (x CronJobDetail_Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CronJobDetail_Phase.Descriptor instead.
func (CronJobDetail_Phase) EnumDescriptor() ([]byte, []int) {
	return file_cron_proto_rawDescGZIP(), []int{7, 0}
}

// *
// Cron details associated with an environmnt
type CronDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                             // Name of the cron task
	Schedule           string `protobuf:"bytes,2,opt,name=Schedule,proto3" json:"Schedule,omitempty"`                     // How often to execute the cron task
	Command            string `protobuf:"bytes,3,opt,name=Command,proto3" json:"Command,omitempty"`                       // Command to execute
	Suspended          bool   `protobuf:"varint,4,opt,name=Suspended,proto3" json:"Suspended,omitempty"`                  // If the cron task is suspended
	LastScheduleTime   string `protobuf:"bytes,5,opt,name=LastScheduleTime,proto3" json:"LastScheduleTime,omitempty"`     // Last time the cron was executed
	LastSuccessfulTime string `protobuf:"bytes,6,opt,name=LastSuccessfulTime,proto3" json:"LastSuccessfulTime,omitempty"` // Last tim the cron was successful
}

func (x *CronDetail) Reset() {
	*x = CronDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cron_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronDetail) ProtoMessage() {}

func (x *CronDetail) ProtoReflect() protoreflect.Message {
	mi := &file_cron_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronDetail.ProtoReflect.Descriptor instead.
func (*CronDetail) Descriptor() ([]byte, []int) {
	return file_cron_proto_rawDescGZIP(), []int{0}
}

func (x *CronDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CronDetail) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *CronDetail) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *CronDetail) GetSuspended() bool {
	if x != nil {
		return x.Suspended
	}
	return false
}

func (x *CronDetail) GetLastScheduleTime() string {
	if x != nil {
		return x.LastScheduleTime
	}
	return ""
}

func (x *CronDetail) GetLastSuccessfulTime() string {
	if x != nil {
		return x.LastSuccessfulTime
	}
	return ""
}

// *
// Request that cron is suspended for an environment
type CronSuspendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Name of the environment
}

func (x *CronSuspendRequest) Reset() {
	*x = CronSuspendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cron_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronSuspendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronSuspendRequest) ProtoMessage() {}

func (x *CronSuspendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cron_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronSuspendRequest.ProtoReflect.Descriptor instead.
func (*CronSuspendRequest) Descriptor() ([]byte, []int) {
	return file_cron_proto_rawDescGZIP(), []int{1}
}

func (x *CronSuspendRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Response if the cron suspend was successful
type CronSuspendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CronSuspendResponse) Reset() {
	*x = CronSuspendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cron_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronSuspendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronSuspendResponse) ProtoMessage() {}

func (x *CronSuspendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cron_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronSuspendResponse.ProtoReflect.Descriptor instead.
func (*CronSuspendResponse) Descriptor() ([]byte, []int) {
	return file_cron_proto_rawDescGZIP(), []int{2}
}

// *
// Request that cron tasks be resumed
type CronResumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Name of the environment
}

func (x *CronResumeRequest) Reset() {
	*x = CronResumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cron_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronResumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronResumeRequest) ProtoMessage() {}

func (x *CronResumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cron_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronResumeRequest.ProtoReflect.Descriptor instead.
func (*CronResumeRequest) Descriptor() ([]byte, []int) {
	return file_cron_proto_rawDescGZIP(), []int{3}
}

func (x *CronResumeRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Response if the cron resume was successful
type CronResumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CronResumeResponse) Reset() {
	*x = CronResumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cron_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronResumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronResumeResponse) ProtoMessage() {}

func (x *CronResumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cron_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronResumeResponse.ProtoReflect.Descriptor instead.
func (*CronResumeResponse) Descriptor() ([]byte, []int) {
	return file_cron_proto_rawDescGZIP(), []int{4}
}

// *
// Request a list of config for an environment
type CronListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Name of the environment
}

func (x *CronListRequest) Reset() {
	*x = CronListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cron_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronListRequest) ProtoMessage() {}

func (x *CronListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cron_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronListRequest.ProtoReflect.Descriptor instead.
func (*CronListRequest) Descriptor() ([]byte, []int) {
	return file_cron_proto_rawDescGZIP(), []int{5}
}

func (x *CronListRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Cron detail for an environment
type CronListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*CronDetail `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"` // List of cron information
}

func (x *CronListResponse) Reset() {
	*x = CronListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cron_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronListResponse) ProtoMessage() {}

func (x *CronListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cron_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronListResponse.ProtoReflect.Descriptor instead.
func (*CronListResponse) Descriptor() ([]byte, []int) {
	return file_cron_proto_rawDescGZIP(), []int{6}
}

func (x *CronListResponse) GetList() []*CronDetail {
	if x != nil {
		return x.List
	}
	return nil
}

// *
// Information about a cron task
type CronJobDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string              `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                                      // Name of cron task
	Phase     CronJobDetail_Phase `protobuf:"varint,2,opt,name=phase,proto3,enum=workflow.CronJobDetail_Phase" json:"phase,omitempty"` // Phase that the cron is in
	StartTime string              `protobuf:"bytes,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"`                            // Time the cron job was started
	Duration  string              `protobuf:"bytes,4,opt,name=Duration,proto3" json:"Duration,omitempty"`                              // How long the cron job took to execute
}

func (x *CronJobDetail) Reset() {
	*x = CronJobDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cron_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronJobDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronJobDetail) ProtoMessage() {}

func (x *CronJobDetail) ProtoReflect() protoreflect.Message {
	mi := &file_cron_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronJobDetail.ProtoReflect.Descriptor instead.
func (*CronJobDetail) Descriptor() ([]byte, []int) {
	return file_cron_proto_rawDescGZIP(), []int{7}
}

func (x *CronJobDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CronJobDetail) GetPhase() CronJobDetail_Phase {
	if x != nil {
		return x.Phase
	}
	return CronJobDetail_Pending
}

func (x *CronJobDetail) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CronJobDetail) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

// *
// Request a list of cron jobs for an environment
type CronJobListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Name of the environment
}

func (x *CronJobListRequest) Reset() {
	*x = CronJobListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cron_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronJobListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronJobListRequest) ProtoMessage() {}

func (x *CronJobListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cron_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronJobListRequest.ProtoReflect.Descriptor instead.
func (*CronJobListRequest) Descriptor() ([]byte, []int) {
	return file_cron_proto_rawDescGZIP(), []int{8}
}

func (x *CronJobListRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// List of cron jobs for an environment
type CronJobListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*CronJobDetail `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"` // List of cron jobs
}

func (x *CronJobListResponse) Reset() {
	*x = CronJobListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cron_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronJobListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronJobListResponse) ProtoMessage() {}

func (x *CronJobListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cron_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronJobListResponse.ProtoReflect.Descriptor instead.
func (*CronJobListResponse) Descriptor() ([]byte, []int) {
	return file_cron_proto_rawDescGZIP(), []int{9}
}

func (x *CronJobListResponse) GetList() []*CronJobDetail {
	if x != nil {
		return x.List
	}
	return nil
}

var File_cron_proto protoreflect.FileDescriptor

var file_cron_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0xd0, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x2a, 0x0a,
	0x10, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x4c, 0x61, 0x73,
	0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x66, 0x75, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x12, 0x43, 0x72, 0x6f,
	0x6e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x72, 0x6f, 0x6e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x11, 0x43, 0x72, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x14, 0x0a, 0x12, 0x43, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x0f, 0x43, 0x72, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x10, 0x43, 0x72,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xd0, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x6f,
	0x6e, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33,
	0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68,
	0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3c, 0x0a,
	0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x22, 0x36, 0x0a, 0x12, 0x43,
	0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x13, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xa2, 0x02, 0x0a, 0x04, 0x63, 0x72, 0x6f, 0x6e,
	0x12, 0x48, 0x0a, 0x07, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x1c, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x53, 0x75, 0x73, 0x70, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x43, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3f, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x43, 0x72, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cron_proto_rawDescOnce sync.Once
	file_cron_proto_rawDescData = file_cron_proto_rawDesc
)

func file_cron_proto_rawDescGZIP() []byte {
	file_cron_proto_rawDescOnce.Do(func() {
		file_cron_proto_rawDescData = protoimpl.X.CompressGZIP(file_cron_proto_rawDescData)
	})
	return file_cron_proto_rawDescData
}

var file_cron_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cron_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_cron_proto_goTypes = []interface{}{
	(CronJobDetail_Phase)(0),    // 0: workflow.CronJobDetail.Phase
	(*CronDetail)(nil),          // 1: workflow.CronDetail
	(*CronSuspendRequest)(nil),  // 2: workflow.CronSuspendRequest
	(*CronSuspendResponse)(nil), // 3: workflow.CronSuspendResponse
	(*CronResumeRequest)(nil),   // 4: workflow.CronResumeRequest
	(*CronResumeResponse)(nil),  // 5: workflow.CronResumeResponse
	(*CronListRequest)(nil),     // 6: workflow.CronListRequest
	(*CronListResponse)(nil),    // 7: workflow.CronListResponse
	(*CronJobDetail)(nil),       // 8: workflow.CronJobDetail
	(*CronJobListRequest)(nil),  // 9: workflow.CronJobListRequest
	(*CronJobListResponse)(nil), // 10: workflow.CronJobListResponse
}
var file_cron_proto_depIdxs = []int32{
	1,  // 0: workflow.CronListResponse.List:type_name -> workflow.CronDetail
	0,  // 1: workflow.CronJobDetail.phase:type_name -> workflow.CronJobDetail.Phase
	8,  // 2: workflow.CronJobListResponse.List:type_name -> workflow.CronJobDetail
	2,  // 3: workflow.cron.Suspend:input_type -> workflow.CronSuspendRequest
	4,  // 4: workflow.cron.Resume:input_type -> workflow.CronResumeRequest
	6,  // 5: workflow.cron.List:input_type -> workflow.CronListRequest
	9,  // 6: workflow.cron.JobList:input_type -> workflow.CronJobListRequest
	3,  // 7: workflow.cron.Suspend:output_type -> workflow.CronSuspendResponse
	5,  // 8: workflow.cron.Resume:output_type -> workflow.CronResumeResponse
	7,  // 9: workflow.cron.List:output_type -> workflow.CronListResponse
	10, // 10: workflow.cron.JobList:output_type -> workflow.CronJobListResponse
	7,  // [7:11] is the sub-list for method output_type
	3,  // [3:7] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_cron_proto_init() }
func file_cron_proto_init() {
	if File_cron_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cron_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cron_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronSuspendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cron_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronSuspendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cron_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronResumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cron_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronResumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cron_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cron_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cron_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronJobDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cron_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronJobListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cron_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronJobListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cron_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cron_proto_goTypes,
		DependencyIndexes: file_cron_proto_depIdxs,
		EnumInfos:         file_cron_proto_enumTypes,
		MessageInfos:      file_cron_proto_msgTypes,
	}.Build()
	File_cron_proto = out.File
	file_cron_proto_rawDesc = nil
	file_cron_proto_goTypes = nil
	file_cron_proto_depIdxs = nil
}
