//* Service responsible for collecting metrics from Compass

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: compass.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Input for StreamTraces.
type StreamTracesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"` // The environment to stream traces from.
}

func (x *StreamTracesRequest) Reset() {
	*x = StreamTracesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compass_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamTracesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTracesRequest) ProtoMessage() {}

func (x *StreamTracesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_compass_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTracesRequest.ProtoReflect.Descriptor instead.
func (*StreamTracesRequest) Descriptor() ([]byte, []int) {
	return file_compass_proto_rawDescGZIP(), []int{0}
}

func (x *StreamTracesRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Output for StreamTraces.
type StreamTracesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Traces []*CompassTrace `protobuf:"bytes,1,rep,name=Traces,proto3" json:"Traces,omitempty"` // List of traces.
}

func (x *StreamTracesResponse) Reset() {
	*x = StreamTracesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compass_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamTracesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTracesResponse) ProtoMessage() {}

func (x *StreamTracesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_compass_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTracesResponse.ProtoReflect.Descriptor instead.
func (*StreamTracesResponse) Descriptor() ([]byte, []int) {
	return file_compass_proto_rawDescGZIP(), []int{1}
}

func (x *StreamTracesResponse) GetTraces() []*CompassTrace {
	if x != nil {
		return x.Traces
	}
	return nil
}

// *
// Trace data provided by Compass.
type CompassTrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata      *CompassTraceMetadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`                                // Metadata about the trace.
	FunctionCalls []*CompassTraceFunctionCall `protobuf:"bytes,2,rep,name=function_calls,json=functionCalls,proto3" json:"function_calls,omitempty"` // List of function calls in the trace.
}

func (x *CompassTrace) Reset() {
	*x = CompassTrace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compass_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompassTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompassTrace) ProtoMessage() {}

func (x *CompassTrace) ProtoReflect() protoreflect.Message {
	mi := &file_compass_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompassTrace.ProtoReflect.Descriptor instead.
func (*CompassTrace) Descriptor() ([]byte, []int) {
	return file_compass_proto_rawDescGZIP(), []int{2}
}

func (x *CompassTrace) GetMetadata() *CompassTraceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CompassTrace) GetFunctionCalls() []*CompassTraceFunctionCall {
	if x != nil {
		return x.FunctionCalls
	}
	return nil
}

// *
// Metadata which contains information about the Compass trace.
type CompassTraceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`  // Request identifier for tracking.
	Uri       string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`                               // URI of the request being traced.
	Method    string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`                         // HTTP method of the request (e.g., GET, POST).
	StartTime int64  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Start time of the trace in unix format.
	EndTime   int64  `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // End time of the trace in unix format.
}

func (x *CompassTraceMetadata) Reset() {
	*x = CompassTraceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compass_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompassTraceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompassTraceMetadata) ProtoMessage() {}

func (x *CompassTraceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_compass_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompassTraceMetadata.ProtoReflect.Descriptor instead.
func (*CompassTraceMetadata) Descriptor() ([]byte, []int) {
	return file_compass_proto_rawDescGZIP(), []int{3}
}

func (x *CompassTraceMetadata) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CompassTraceMetadata) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CompassTraceMetadata) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *CompassTraceMetadata) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CompassTraceMetadata) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

// *
// Function call data within a Compass trace.
type CompassTraceFunctionCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                   // Name of the function being traced.
	StartTime   int64  `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`       // Start time of the function call in unix format.
	ElapsedTime int64  `protobuf:"varint,3,opt,name=elapsed_time,json=elapsedTime,proto3" json:"elapsed_time,omitempty"` // Elapsed time for the function call in milliseconds.
}

func (x *CompassTraceFunctionCall) Reset() {
	*x = CompassTraceFunctionCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compass_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompassTraceFunctionCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompassTraceFunctionCall) ProtoMessage() {}

func (x *CompassTraceFunctionCall) ProtoReflect() protoreflect.Message {
	mi := &file_compass_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompassTraceFunctionCall.ProtoReflect.Descriptor instead.
func (*CompassTraceFunctionCall) Descriptor() ([]byte, []int) {
	return file_compass_proto_rawDescGZIP(), []int{4}
}

func (x *CompassTraceFunctionCall) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompassTraceFunctionCall) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CompassTraceFunctionCall) GetElapsedTime() int64 {
	if x != nil {
		return x.ElapsedTime
	}
	return 0
}

var File_compass_proto protoreflect.FileDescriptor

var file_compass_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0x37, 0x0a, 0x13, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x46, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x52, 0x06, 0x54, 0x72, 0x61, 0x63, 0x65, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x0c, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x0e, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x6c, 0x6c, 0x52, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c,
	0x6c, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x70,
	0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x32, 0x5a, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73, 0x12, 0x4f, 0x0a, 0x0c, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_compass_proto_rawDescOnce sync.Once
	file_compass_proto_rawDescData = file_compass_proto_rawDesc
)

func file_compass_proto_rawDescGZIP() []byte {
	file_compass_proto_rawDescOnce.Do(func() {
		file_compass_proto_rawDescData = protoimpl.X.CompressGZIP(file_compass_proto_rawDescData)
	})
	return file_compass_proto_rawDescData
}

var file_compass_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_compass_proto_goTypes = []interface{}{
	(*StreamTracesRequest)(nil),      // 0: workflow.StreamTracesRequest
	(*StreamTracesResponse)(nil),     // 1: workflow.StreamTracesResponse
	(*CompassTrace)(nil),             // 2: workflow.CompassTrace
	(*CompassTraceMetadata)(nil),     // 3: workflow.CompassTraceMetadata
	(*CompassTraceFunctionCall)(nil), // 4: workflow.CompassTraceFunctionCall
}
var file_compass_proto_depIdxs = []int32{
	2, // 0: workflow.StreamTracesResponse.Traces:type_name -> workflow.CompassTrace
	3, // 1: workflow.CompassTrace.metadata:type_name -> workflow.CompassTraceMetadata
	4, // 2: workflow.CompassTrace.function_calls:type_name -> workflow.CompassTraceFunctionCall
	0, // 3: workflow.compass.StreamTraces:input_type -> workflow.StreamTracesRequest
	1, // 4: workflow.compass.StreamTraces:output_type -> workflow.StreamTracesResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_compass_proto_init() }
func file_compass_proto_init() {
	if File_compass_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_compass_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamTracesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compass_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamTracesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compass_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompassTrace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compass_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompassTraceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compass_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompassTraceFunctionCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_compass_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_compass_proto_goTypes,
		DependencyIndexes: file_compass_proto_depIdxs,
		MessageInfos:      file_compass_proto_msgTypes,
	}.Build()
	File_compass_proto = out.File
	file_compass_proto_rawDesc = nil
	file_compass_proto_goTypes = nil
	file_compass_proto_depIdxs = nil
}
