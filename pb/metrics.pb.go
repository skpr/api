//* Service responsible for coordinating cluster/environment metrics

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: metrics.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Input for ClusterRequests.
type ClusterRequestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClusterRequestsRequest) Reset() {
	*x = ClusterRequestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterRequestsRequest) ProtoMessage() {}

func (x *ClusterRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterRequestsRequest.ProtoReflect.Descriptor instead.
func (*ClusterRequestsRequest) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{0}
}

// *
// Output for ClusterRequests.
type ClusterRequestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*MetricClusterRequests `protobuf:"bytes,1,rep,name=Metrics,proto3" json:"Metrics,omitempty"` // List of metrics.
}

func (x *ClusterRequestsResponse) Reset() {
	*x = ClusterRequestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterRequestsResponse) ProtoMessage() {}

func (x *ClusterRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterRequestsResponse.ProtoReflect.Descriptor instead.
func (*ClusterRequestsResponse) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *ClusterRequestsResponse) GetMetrics() []*MetricClusterRequests {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// *
// Metric which contains total request for a single date for all cluster environments.
type MetricClusterRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date     string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`          // Date which the metric dat a is grouped by.
	Requests int64  `protobuf:"varint,2,opt,name=Requests,proto3" json:"Requests,omitempty"` // Requests across all environments.
}

func (x *MetricClusterRequests) Reset() {
	*x = MetricClusterRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricClusterRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricClusterRequests) ProtoMessage() {}

func (x *MetricClusterRequests) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricClusterRequests.ProtoReflect.Descriptor instead.
func (*MetricClusterRequests) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *MetricClusterRequests) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MetricClusterRequests) GetRequests() int64 {
	if x != nil {
		return x.Requests
	}
	return 0
}

// *
// Input for ClusterResponseCodes.
type ClusterResponseCodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClusterResponseCodesRequest) Reset() {
	*x = ClusterResponseCodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterResponseCodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterResponseCodesRequest) ProtoMessage() {}

func (x *ClusterResponseCodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterResponseCodesRequest.ProtoReflect.Descriptor instead.
func (*ClusterResponseCodesRequest) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{3}
}

// *
// Output for ClusterResponseCodes.
type ClusterResponseCodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*MetricClusterResponseCodes `protobuf:"bytes,1,rep,name=Metrics,proto3" json:"Metrics,omitempty"` // List of metrics.
}

func (x *ClusterResponseCodesResponse) Reset() {
	*x = ClusterResponseCodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterResponseCodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterResponseCodesResponse) ProtoMessage() {}

func (x *ClusterResponseCodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterResponseCodesResponse.ProtoReflect.Descriptor instead.
func (*ClusterResponseCodesResponse) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{4}
}

func (x *ClusterResponseCodesResponse) GetMetrics() []*MetricClusterResponseCodes {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// *
// Metric which contains total response codes for a single date.
type MetricClusterResponseCodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"` // Date which the metric dat a is grouped by.
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Status
	Server      int64 `protobuf:"varint,2,opt,name=Server,proto3" json:"Server,omitempty"`           // Error codes were returned from the server.
	Client      int64 `protobuf:"varint,3,opt,name=Client,proto3" json:"Client,omitempty"`           // Client related codes.
	Redirection int64 `protobuf:"varint,4,opt,name=Redirection,proto3" json:"Redirection,omitempty"` // Codes which related to redirects.
	Successful  int64 `protobuf:"varint,5,opt,name=Successful,proto3" json:"Successful,omitempty"`   // Codes which relate to successful responses.
}

func (x *MetricClusterResponseCodes) Reset() {
	*x = MetricClusterResponseCodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricClusterResponseCodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricClusterResponseCodes) ProtoMessage() {}

func (x *MetricClusterResponseCodes) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricClusterResponseCodes.ProtoReflect.Descriptor instead.
func (*MetricClusterResponseCodes) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{5}
}

func (x *MetricClusterResponseCodes) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MetricClusterResponseCodes) GetServer() int64 {
	if x != nil {
		return x.Server
	}
	return 0
}

func (x *MetricClusterResponseCodes) GetClient() int64 {
	if x != nil {
		return x.Client
	}
	return 0
}

func (x *MetricClusterResponseCodes) GetRedirection() int64 {
	if x != nil {
		return x.Redirection
	}
	return 0
}

func (x *MetricClusterResponseCodes) GetSuccessful() int64 {
	if x != nil {
		return x.Successful
	}
	return 0
}

// *
// Input for Requests.
type RequestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Name of the environment.
}

func (x *RequestsRequest) Reset() {
	*x = RequestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestsRequest) ProtoMessage() {}

func (x *RequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestsRequest.ProtoReflect.Descriptor instead.
func (*RequestsRequest) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{6}
}

func (x *RequestsRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Output for Requests.
type RequestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*MetricRequests `protobuf:"bytes,1,rep,name=Metrics,proto3" json:"Metrics,omitempty"` // List of returned metrics.
}

func (x *RequestsResponse) Reset() {
	*x = RequestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestsResponse) ProtoMessage() {}

func (x *RequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestsResponse.ProtoReflect.Descriptor instead.
func (*RequestsResponse) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{7}
}

func (x *RequestsResponse) GetMetrics() []*MetricRequests {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// *
// Metric which contains total request for a single date on a single environment.
type MetricRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date     string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"` // Date which the metric dat a is grouped by.
	Requests int64  `protobuf:"varint,2,opt,name=Requests,proto3" json:"Requests,omitempty"`
}

func (x *MetricRequests) Reset() {
	*x = MetricRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricRequests) ProtoMessage() {}

func (x *MetricRequests) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricRequests.ProtoReflect.Descriptor instead.
func (*MetricRequests) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{8}
}

func (x *MetricRequests) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MetricRequests) GetRequests() int64 {
	if x != nil {
		return x.Requests
	}
	return 0
}

// *
// Input for ResponseCodes.
type ResponseCodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Name of the environment.
}

func (x *ResponseCodesRequest) Reset() {
	*x = ResponseCodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCodesRequest) ProtoMessage() {}

func (x *ResponseCodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCodesRequest.ProtoReflect.Descriptor instead.
func (*ResponseCodesRequest) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{9}
}

func (x *ResponseCodesRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Output for ResponseCodes.
type ResponseCodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*MetricResponseCodes `protobuf:"bytes,1,rep,name=Metrics,proto3" json:"Metrics,omitempty"` // List of returned metrics.
}

func (x *ResponseCodesResponse) Reset() {
	*x = ResponseCodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCodesResponse) ProtoMessage() {}

func (x *ResponseCodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCodesResponse.ProtoReflect.Descriptor instead.
func (*ResponseCodesResponse) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{10}
}

func (x *ResponseCodesResponse) GetMetrics() []*MetricResponseCodes {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// *
// Metric which contains total response codes for a single date on a single environment.
type MetricResponseCodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"` // Date which the metric dat a is grouped by.
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Status
	Server      int64 `protobuf:"varint,2,opt,name=Server,proto3" json:"Server,omitempty"`           // Error codes were returned from the server.
	Client      int64 `protobuf:"varint,3,opt,name=Client,proto3" json:"Client,omitempty"`           // Client related codes.
	Redirection int64 `protobuf:"varint,4,opt,name=Redirection,proto3" json:"Redirection,omitempty"` // Codes which related to redirects.
	Successful  int64 `protobuf:"varint,5,opt,name=Successful,proto3" json:"Successful,omitempty"`   // Codes which relate to successful responses.
}

func (x *MetricResponseCodes) Reset() {
	*x = MetricResponseCodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricResponseCodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricResponseCodes) ProtoMessage() {}

func (x *MetricResponseCodes) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricResponseCodes.ProtoReflect.Descriptor instead.
func (*MetricResponseCodes) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{11}
}

func (x *MetricResponseCodes) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MetricResponseCodes) GetServer() int64 {
	if x != nil {
		return x.Server
	}
	return 0
}

func (x *MetricResponseCodes) GetClient() int64 {
	if x != nil {
		return x.Client
	}
	return 0
}

func (x *MetricResponseCodes) GetRedirection() int64 {
	if x != nil {
		return x.Redirection
	}
	return 0
}

func (x *MetricResponseCodes) GetSuccessful() int64 {
	if x != nil {
		return x.Successful
	}
	return 0
}

// *
// Input for ResponseTimes.
type ResponseTimesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Name of the environment.
}

func (x *ResponseTimesRequest) Reset() {
	*x = ResponseTimesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseTimesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseTimesRequest) ProtoMessage() {}

func (x *ResponseTimesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseTimesRequest.ProtoReflect.Descriptor instead.
func (*ResponseTimesRequest) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{12}
}

func (x *ResponseTimesRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Output for ResponseTimes.
type ResponseTimesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*MetricResponseTimes `protobuf:"bytes,1,rep,name=Metrics,proto3" json:"Metrics,omitempty"` // List of returned metrics.
}

func (x *ResponseTimesResponse) Reset() {
	*x = ResponseTimesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseTimesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseTimesResponse) ProtoMessage() {}

func (x *ResponseTimesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseTimesResponse.ProtoReflect.Descriptor instead.
func (*ResponseTimesResponse) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{13}
}

func (x *ResponseTimesResponse) GetMetrics() []*MetricResponseTimes {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// *
// Metric which contains total response times for a single date on a single environment.
type MetricResponseTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date    string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`        // Date which the metric dat a is grouped by.
	Average int64  `protobuf:"varint,2,opt,name=Average,proto3" json:"Average,omitempty"` // Average response time.
	P95     int64  `protobuf:"varint,3,opt,name=P95,proto3" json:"P95,omitempty"`         // 95th percentile.
	P99     int64  `protobuf:"varint,4,opt,name=P99,proto3" json:"P99,omitempty"`         // 99th percentile
}

func (x *MetricResponseTimes) Reset() {
	*x = MetricResponseTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricResponseTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricResponseTimes) ProtoMessage() {}

func (x *MetricResponseTimes) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricResponseTimes.ProtoReflect.Descriptor instead.
func (*MetricResponseTimes) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{14}
}

func (x *MetricResponseTimes) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MetricResponseTimes) GetAverage() int64 {
	if x != nil {
		return x.Average
	}
	return 0
}

func (x *MetricResponseTimes) GetP95() int64 {
	if x != nil {
		return x.P95
	}
	return 0
}

func (x *MetricResponseTimes) GetP99() int64 {
	if x != nil {
		return x.P99
	}
	return 0
}

// *
// Input for CacheRatio.
type CacheRatioRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Name of the environment.
}

func (x *CacheRatioRequest) Reset() {
	*x = CacheRatioRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheRatioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheRatioRequest) ProtoMessage() {}

func (x *CacheRatioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheRatioRequest.ProtoReflect.Descriptor instead.
func (*CacheRatioRequest) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{15}
}

func (x *CacheRatioRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Output for CacheRatio.
type CacheRatioResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*MetricCacheRatio `protobuf:"bytes,1,rep,name=Metrics,proto3" json:"Metrics,omitempty"` // List of returned metrics.
}

func (x *CacheRatioResponse) Reset() {
	*x = CacheRatioResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheRatioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheRatioResponse) ProtoMessage() {}

func (x *CacheRatioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheRatioResponse.ProtoReflect.Descriptor instead.
func (*CacheRatioResponse) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{16}
}

func (x *CacheRatioResponse) GetMetrics() []*MetricCacheRatio {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// *
// Metric which contains cache ratio for a single date on a single environment.
type MetricCacheRatio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`  // Date which the metric dat a is grouped by.
	Hit  int64  `protobuf:"varint,2,opt,name=Hit,proto3" json:"Hit,omitempty"`   // Percentage of cached responses.
	Miss int64  `protobuf:"varint,3,opt,name=Miss,proto3" json:"Miss,omitempty"` // Percentage of non cached responses.
}

func (x *MetricCacheRatio) Reset() {
	*x = MetricCacheRatio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricCacheRatio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricCacheRatio) ProtoMessage() {}

func (x *MetricCacheRatio) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricCacheRatio.ProtoReflect.Descriptor instead.
func (*MetricCacheRatio) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{17}
}

func (x *MetricCacheRatio) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MetricCacheRatio) GetHit() int64 {
	if x != nil {
		return x.Hit
	}
	return 0
}

func (x *MetricCacheRatio) GetMiss() int64 {
	if x != nil {
		return x.Miss
	}
	return 0
}

// *
// Input for OriginErrors.
type OriginErrorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Name of the environment.
}

func (x *OriginErrorsRequest) Reset() {
	*x = OriginErrorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OriginErrorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginErrorsRequest) ProtoMessage() {}

func (x *OriginErrorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginErrorsRequest.ProtoReflect.Descriptor instead.
func (*OriginErrorsRequest) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{18}
}

func (x *OriginErrorsRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Output for OriginErrors.
type OriginErrorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*MetricOriginErrors `protobuf:"bytes,1,rep,name=Metrics,proto3" json:"Metrics,omitempty"` // List of returned metrics.
}

func (x *OriginErrorsResponse) Reset() {
	*x = OriginErrorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OriginErrorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OriginErrorsResponse) ProtoMessage() {}

func (x *OriginErrorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OriginErrorsResponse.ProtoReflect.Descriptor instead.
func (*OriginErrorsResponse) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{19}
}

func (x *OriginErrorsResponse) GetMetrics() []*MetricOriginErrors {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// *
// Metric which contains origin errors for a single date on a single environment.
type MetricOriginErrors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date   string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`      // Date which the metric dat a is grouped by.
	Errors int64  `protobuf:"varint,2,opt,name=Errors,proto3" json:"Errors,omitempty"` // Number of origin errors.
}

func (x *MetricOriginErrors) Reset() {
	*x = MetricOriginErrors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricOriginErrors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricOriginErrors) ProtoMessage() {}

func (x *MetricOriginErrors) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricOriginErrors.ProtoReflect.Descriptor instead.
func (*MetricOriginErrors) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{20}
}

func (x *MetricOriginErrors) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MetricOriginErrors) GetErrors() int64 {
	if x != nil {
		return x.Errors
	}
	return 0
}

// *
// Input for InvalidationRequests.
type InvalidationRequestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Name of the environment.
}

func (x *InvalidationRequestsRequest) Reset() {
	*x = InvalidationRequestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidationRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidationRequestsRequest) ProtoMessage() {}

func (x *InvalidationRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidationRequestsRequest.ProtoReflect.Descriptor instead.
func (*InvalidationRequestsRequest) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{21}
}

func (x *InvalidationRequestsRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Output for InvalidationRequests.
type InvalidationRequestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*MetricInvalidationRequests `protobuf:"bytes,1,rep,name=Metrics,proto3" json:"Metrics,omitempty"` // List of returned metrics.
}

func (x *InvalidationRequestsResponse) Reset() {
	*x = InvalidationRequestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidationRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidationRequestsResponse) ProtoMessage() {}

func (x *InvalidationRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidationRequestsResponse.ProtoReflect.Descriptor instead.
func (*InvalidationRequestsResponse) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{22}
}

func (x *InvalidationRequestsResponse) GetMetrics() []*MetricInvalidationRequests {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// *
// Metric which contains invalidation requests for a single date on a single environment.
type MetricInvalidationRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date     string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`          // Date which the metric dat a is grouped by.
	Requests int64  `protobuf:"varint,2,opt,name=Requests,proto3" json:"Requests,omitempty"` // Number of invalidation requests.
}

func (x *MetricInvalidationRequests) Reset() {
	*x = MetricInvalidationRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricInvalidationRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricInvalidationRequests) ProtoMessage() {}

func (x *MetricInvalidationRequests) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricInvalidationRequests.ProtoReflect.Descriptor instead.
func (*MetricInvalidationRequests) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{23}
}

func (x *MetricInvalidationRequests) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MetricInvalidationRequests) GetRequests() int64 {
	if x != nil {
		return x.Requests
	}
	return 0
}

// *
// Input for InvalidationPaths.
type InvalidationPathsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Name of the environment.
}

func (x *InvalidationPathsRequest) Reset() {
	*x = InvalidationPathsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidationPathsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidationPathsRequest) ProtoMessage() {}

func (x *InvalidationPathsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidationPathsRequest.ProtoReflect.Descriptor instead.
func (*InvalidationPathsRequest) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{24}
}

func (x *InvalidationPathsRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Output for InvalidationPaths.
type InvalidationPathsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*MetricInvalidationPaths `protobuf:"bytes,1,rep,name=Metrics,proto3" json:"Metrics,omitempty"` // List of returned metrics.
}

func (x *InvalidationPathsResponse) Reset() {
	*x = InvalidationPathsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidationPathsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidationPathsResponse) ProtoMessage() {}

func (x *InvalidationPathsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidationPathsResponse.ProtoReflect.Descriptor instead.
func (*InvalidationPathsResponse) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{25}
}

func (x *InvalidationPathsResponse) GetMetrics() []*MetricInvalidationPaths {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// *
// Metric which contains invalidation paths for a single date on a single environment.
type MetricInvalidationPaths struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date  string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`    // Date which the metric dat a is grouped by. // Date which the metric dat a is grouped by.
	Paths int64  `protobuf:"varint,2,opt,name=Paths,proto3" json:"Paths,omitempty"` // Number of paths that were invalidated.
}

func (x *MetricInvalidationPaths) Reset() {
	*x = MetricInvalidationPaths{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metrics_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricInvalidationPaths) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricInvalidationPaths) ProtoMessage() {}

func (x *MetricInvalidationPaths) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricInvalidationPaths.ProtoReflect.Descriptor instead.
func (*MetricInvalidationPaths) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{26}
}

func (x *MetricInvalidationPaths) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *MetricInvalidationPaths) GetPaths() int64 {
	if x != nil {
		return x.Paths
	}
	return 0
}

var File_metrics_proto protoreflect.FileDescriptor

var file_metrics_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x17, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x52, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x47, 0x0a, 0x15, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x5e, 0x0a, 0x1c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x22, 0xa2, 0x01, 0x0a, 0x1a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x66, 0x75, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22, 0x33, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x10, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x07, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x22, 0x40, 0x0a, 0x0e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x38, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x50, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22,
	0x38, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x15, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x52, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x67, 0x0a, 0x13, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x50, 0x39, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x50,
	0x39, 0x35, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x39, 0x39, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x50, 0x39, 0x39, 0x22, 0x35, 0x0a, 0x11, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x12, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x52, 0x07,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x4c, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x48, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x48, 0x69,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x69, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x4d, 0x69, 0x73, 0x73, 0x22, 0x37, 0x0a, 0x13, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4e,
	0x0a, 0x14, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x40,
	0x0a, 0x12, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x22, 0x3f, 0x0a, 0x1b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x5e, 0x0a, 0x1c, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x22, 0x4c, 0x0a, 0x1a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22,
	0x3c, 0x0a, 0x18, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x74, 0x68, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x58, 0x0a,
	0x19, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x73, 0x52, 0x07,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x43, 0x0a, 0x17, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x61, 0x74, 0x68, 0x73, 0x32, 0x9e, 0x06, 0x0a,
	0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x58, 0x0a, 0x0f, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x67, 0x0a, 0x14, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x1e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x1b, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a,
	0x11, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x12, 0x22, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x74, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_metrics_proto_rawDescOnce sync.Once
	file_metrics_proto_rawDescData = file_metrics_proto_rawDesc
)

func file_metrics_proto_rawDescGZIP() []byte {
	file_metrics_proto_rawDescOnce.Do(func() {
		file_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(file_metrics_proto_rawDescData)
	})
	return file_metrics_proto_rawDescData
}

var file_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_metrics_proto_goTypes = []interface{}{
	(*ClusterRequestsRequest)(nil),       // 0: workflow.ClusterRequestsRequest
	(*ClusterRequestsResponse)(nil),      // 1: workflow.ClusterRequestsResponse
	(*MetricClusterRequests)(nil),        // 2: workflow.MetricClusterRequests
	(*ClusterResponseCodesRequest)(nil),  // 3: workflow.ClusterResponseCodesRequest
	(*ClusterResponseCodesResponse)(nil), // 4: workflow.ClusterResponseCodesResponse
	(*MetricClusterResponseCodes)(nil),   // 5: workflow.MetricClusterResponseCodes
	(*RequestsRequest)(nil),              // 6: workflow.RequestsRequest
	(*RequestsResponse)(nil),             // 7: workflow.RequestsResponse
	(*MetricRequests)(nil),               // 8: workflow.MetricRequests
	(*ResponseCodesRequest)(nil),         // 9: workflow.ResponseCodesRequest
	(*ResponseCodesResponse)(nil),        // 10: workflow.ResponseCodesResponse
	(*MetricResponseCodes)(nil),          // 11: workflow.MetricResponseCodes
	(*ResponseTimesRequest)(nil),         // 12: workflow.ResponseTimesRequest
	(*ResponseTimesResponse)(nil),        // 13: workflow.ResponseTimesResponse
	(*MetricResponseTimes)(nil),          // 14: workflow.MetricResponseTimes
	(*CacheRatioRequest)(nil),            // 15: workflow.CacheRatioRequest
	(*CacheRatioResponse)(nil),           // 16: workflow.CacheRatioResponse
	(*MetricCacheRatio)(nil),             // 17: workflow.MetricCacheRatio
	(*OriginErrorsRequest)(nil),          // 18: workflow.OriginErrorsRequest
	(*OriginErrorsResponse)(nil),         // 19: workflow.OriginErrorsResponse
	(*MetricOriginErrors)(nil),           // 20: workflow.MetricOriginErrors
	(*InvalidationRequestsRequest)(nil),  // 21: workflow.InvalidationRequestsRequest
	(*InvalidationRequestsResponse)(nil), // 22: workflow.InvalidationRequestsResponse
	(*MetricInvalidationRequests)(nil),   // 23: workflow.MetricInvalidationRequests
	(*InvalidationPathsRequest)(nil),     // 24: workflow.InvalidationPathsRequest
	(*InvalidationPathsResponse)(nil),    // 25: workflow.InvalidationPathsResponse
	(*MetricInvalidationPaths)(nil),      // 26: workflow.MetricInvalidationPaths
}
var file_metrics_proto_depIdxs = []int32{
	2,  // 0: workflow.ClusterRequestsResponse.Metrics:type_name -> workflow.MetricClusterRequests
	5,  // 1: workflow.ClusterResponseCodesResponse.Metrics:type_name -> workflow.MetricClusterResponseCodes
	8,  // 2: workflow.RequestsResponse.Metrics:type_name -> workflow.MetricRequests
	11, // 3: workflow.ResponseCodesResponse.Metrics:type_name -> workflow.MetricResponseCodes
	14, // 4: workflow.ResponseTimesResponse.Metrics:type_name -> workflow.MetricResponseTimes
	17, // 5: workflow.CacheRatioResponse.Metrics:type_name -> workflow.MetricCacheRatio
	20, // 6: workflow.OriginErrorsResponse.Metrics:type_name -> workflow.MetricOriginErrors
	23, // 7: workflow.InvalidationRequestsResponse.Metrics:type_name -> workflow.MetricInvalidationRequests
	26, // 8: workflow.InvalidationPathsResponse.Metrics:type_name -> workflow.MetricInvalidationPaths
	0,  // 9: workflow.metrics.ClusterRequests:input_type -> workflow.ClusterRequestsRequest
	3,  // 10: workflow.metrics.ClusterResponseCodes:input_type -> workflow.ClusterResponseCodesRequest
	6,  // 11: workflow.metrics.Requests:input_type -> workflow.RequestsRequest
	9,  // 12: workflow.metrics.ResponseCodes:input_type -> workflow.ResponseCodesRequest
	12, // 13: workflow.metrics.ResponseTimes:input_type -> workflow.ResponseTimesRequest
	15, // 14: workflow.metrics.CacheRatio:input_type -> workflow.CacheRatioRequest
	18, // 15: workflow.metrics.OriginErrors:input_type -> workflow.OriginErrorsRequest
	21, // 16: workflow.metrics.InvalidationRequests:input_type -> workflow.InvalidationRequestsRequest
	24, // 17: workflow.metrics.InvalidationPaths:input_type -> workflow.InvalidationPathsRequest
	1,  // 18: workflow.metrics.ClusterRequests:output_type -> workflow.ClusterRequestsResponse
	4,  // 19: workflow.metrics.ClusterResponseCodes:output_type -> workflow.ClusterResponseCodesResponse
	7,  // 20: workflow.metrics.Requests:output_type -> workflow.RequestsResponse
	10, // 21: workflow.metrics.ResponseCodes:output_type -> workflow.ResponseCodesResponse
	13, // 22: workflow.metrics.ResponseTimes:output_type -> workflow.ResponseTimesResponse
	16, // 23: workflow.metrics.CacheRatio:output_type -> workflow.CacheRatioResponse
	19, // 24: workflow.metrics.OriginErrors:output_type -> workflow.OriginErrorsResponse
	22, // 25: workflow.metrics.InvalidationRequests:output_type -> workflow.InvalidationRequestsResponse
	25, // 26: workflow.metrics.InvalidationPaths:output_type -> workflow.InvalidationPathsResponse
	18, // [18:27] is the sub-list for method output_type
	9,  // [9:18] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_metrics_proto_init() }
func file_metrics_proto_init() {
	if File_metrics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_metrics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterRequestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterRequestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricClusterRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterResponseCodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterResponseCodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricClusterResponseCodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricResponseCodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseTimesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseTimesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricResponseTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheRatioRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheRatioResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricCacheRatio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OriginErrorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OriginErrorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricOriginErrors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidationRequestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidationRequestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricInvalidationRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidationPathsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidationPathsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metrics_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricInvalidationPaths); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metrics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metrics_proto_goTypes,
		DependencyIndexes: file_metrics_proto_depIdxs,
		MessageInfos:      file_metrics_proto_msgTypes,
	}.Build()
	File_metrics_proto = out.File
	file_metrics_proto_rawDesc = nil
	file_metrics_proto_goTypes = nil
	file_metrics_proto_depIdxs = nil
}
