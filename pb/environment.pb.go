//* Service responsible for coordinating environments

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: environment.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Environment_Type int32

const (
	Environment_None   Environment_Type = 0 // Default environment type
	Environment_Drupal Environment_Type = 1 // Environment is Drupal
)

// Enum value maps for Environment_Type.
var (
	Environment_Type_name = map[int32]string{
		0: "None",
		1: "Drupal",
	}
	Environment_Type_value = map[string]int32{
		"None":   0,
		"Drupal": 1,
	}
)

func (x Environment_Type) Enum() *Environment_Type {
	p := new(Environment_Type)
	*p = x
	return p
}

func (x Environment_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Environment_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_environment_proto_enumTypes[0].Descriptor()
}

func (Environment_Type) Type() protoreflect.EnumType {
	return &file_environment_proto_enumTypes[0]
}

func (x Environment_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Environment_Type.Descriptor instead.
func (Environment_Type) EnumDescriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{3, 0}
}

type EnvironmentValidateFinding_Type int32

const (
	EnvironmentValidateFinding_Violation EnvironmentValidateFinding_Type = 0 // If this finding is a violation
	EnvironmentValidateFinding_Warning   EnvironmentValidateFinding_Type = 1 // If this finding is a warning
)

// Enum value maps for EnvironmentValidateFinding_Type.
var (
	EnvironmentValidateFinding_Type_name = map[int32]string{
		0: "Violation",
		1: "Warning",
	}
	EnvironmentValidateFinding_Type_value = map[string]int32{
		"Violation": 0,
		"Warning":   1,
	}
)

func (x EnvironmentValidateFinding_Type) Enum() *EnvironmentValidateFinding_Type {
	p := new(EnvironmentValidateFinding_Type)
	*p = x
	return p
}

func (x EnvironmentValidateFinding_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnvironmentValidateFinding_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_environment_proto_enumTypes[1].Descriptor()
}

func (EnvironmentValidateFinding_Type) Type() protoreflect.EnumType {
	return &file_environment_proto_enumTypes[1]
}

func (x EnvironmentValidateFinding_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnvironmentValidateFinding_Type.Descriptor instead.
func (EnvironmentValidateFinding_Type) EnumDescriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{20, 0}
}

type Ingress_Mode int32

const (
	Ingress_Default  Ingress_Mode = 0 // Standard routing configuration
	Ingress_External Ingress_Mode = 1 // If the environment has an external CDN
)

// Enum value maps for Ingress_Mode.
var (
	Ingress_Mode_name = map[int32]string{
		0: "Default",
		1: "External",
	}
	Ingress_Mode_value = map[string]int32{
		"Default":  0,
		"External": 1,
	}
)

func (x Ingress_Mode) Enum() *Ingress_Mode {
	p := new(Ingress_Mode)
	*p = x
	return p
}

func (x Ingress_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Ingress_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_environment_proto_enumTypes[2].Descriptor()
}

func (Ingress_Mode) Type() protoreflect.EnumType {
	return &file_environment_proto_enumTypes[2]
}

func (x Ingress_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Ingress_Mode.Descriptor instead.
func (Ingress_Mode) EnumDescriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{24, 0}
}

// *
// Environment cache configuration
type Cache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy string `protobuf:"bytes,1,opt,name=Policy,proto3" json:"Policy,omitempty"` // Cache policy assigned to an environment
}

func (x *Cache) Reset() {
	*x = Cache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cache) ProtoMessage() {}

func (x *Cache) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cache.ProtoReflect.Descriptor instead.
func (*Cache) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{0}
}

func (x *Cache) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

// *
// Environment cron configuration
type Cron struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`         // Cron task name
	Command  string `protobuf:"bytes,2,opt,name=Command,proto3" json:"Command,omitempty"`   // Cron task command
	Schedule string `protobuf:"bytes,3,opt,name=Schedule,proto3" json:"Schedule,omitempty"` // How often the cron is executed
}

func (x *Cron) Reset() {
	*x = Cron{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cron) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cron) ProtoMessage() {}

func (x *Cron) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cron.ProtoReflect.Descriptor instead.
func (*Cron) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{1}
}

func (x *Cron) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cron) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Cron) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

// *
// Environment daemon configuration
type Daemon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`       // Name of the daemon
	Command string `protobuf:"bytes,2,opt,name=Command,proto3" json:"Command,omitempty"` // Command that runs the daemon
}

func (x *Daemon) Reset() {
	*x = Daemon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Daemon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Daemon) ProtoMessage() {}

func (x *Daemon) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Daemon.ProtoReflect.Descriptor instead.
func (*Daemon) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{2}
}

func (x *Daemon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Daemon) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

// *
// Environment configuration
type Environment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                                 // Name of the environment
	Type       Environment_Type      `protobuf:"varint,2,opt,name=type,proto3,enum=workflow.Environment_Type" json:"type,omitempty"` // Type of environment
	Production bool                  `protobuf:"varint,3,opt,name=Production,proto3" json:"Production,omitempty"`                    // If this is a production environment
	Insecure   bool                  `protobuf:"varint,4,opt,name=Insecure,proto3" json:"Insecure,omitempty"`                        // DEPRECIATED: If the environment is insecure (no read only filesystem)
	Version    string                `protobuf:"bytes,5,opt,name=Version,proto3" json:"Version,omitempty"`                           // Version associated with an environment
	Size       string                `protobuf:"bytes,6,opt,name=Size,proto3" json:"Size,omitempty"`                                 // Size of the environment
	Ingress    *Ingress              `protobuf:"bytes,7,opt,name=Ingress,proto3" json:"Ingress,omitempty"`                           // Ingress configuration for routing
	Image      *Image                `protobuf:"bytes,8,opt,name=Image,proto3" json:"Image,omitempty"`                               // Image respository information
	Cron       []*Cron               `protobuf:"bytes,9,rep,name=Cron,proto3" json:"Cron,omitempty"`                                 // Cron configuration for an environment
	MySQL      []*MySQL              `protobuf:"bytes,10,rep,name=MySQL,proto3" json:"MySQL,omitempty"`                              // MySQL configuration for an environment
	SMTP       *SMTP                 `protobuf:"bytes,11,opt,name=SMTP,proto3" json:"SMTP,omitempty"`                                // SMTP configuration for an environment
	Backup     *ScheduledBackup      `protobuf:"bytes,12,opt,name=Backup,proto3" json:"Backup,omitempty"`                            // How often the backup is scheduled
	Solr       []*Solr               `protobuf:"bytes,13,rep,name=Solr,proto3" json:"Solr,omitempty"`                                // Solr configuration for an environment
	Token      string                `protobuf:"bytes,14,opt,name=Token,proto3" json:"Token,omitempty"`                              // Token assigned to an environment
	Phase      string                `protobuf:"bytes,15,opt,name=Phase,proto3" json:"Phase,omitempty"`                              // Phase the environment is in eg. Deploying
	Link       []*Link               `protobuf:"bytes,16,rep,name=Link,proto3" json:"Link,omitempty"`                                // Linked to other environments
	Volume     []*Volume             `protobuf:"bytes,17,rep,name=Volume,proto3" json:"Volume,omitempty"`                            // Volumes associated with this environment
	Dashboard  *EnvironmentDashboard `protobuf:"bytes,18,opt,name=Dashboard,proto3" json:"Dashboard,omitempty"`                      // Link to dashboard
	Daemon     []*Daemon             `protobuf:"bytes,19,rep,name=Daemon,proto3" json:"Daemon,omitempty"`                            // Daemon configuration for an environment
	Resources  *EnvironmentResources `protobuf:"bytes,20,opt,name=Resources,proto3" json:"Resources,omitempty"`                      // Resources utilised by this environment
}

func (x *Environment) Reset() {
	*x = Environment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Environment) ProtoMessage() {}

func (x *Environment) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Environment.ProtoReflect.Descriptor instead.
func (*Environment) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{3}
}

func (x *Environment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Environment) GetType() Environment_Type {
	if x != nil {
		return x.Type
	}
	return Environment_None
}

func (x *Environment) GetProduction() bool {
	if x != nil {
		return x.Production
	}
	return false
}

func (x *Environment) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

func (x *Environment) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Environment) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *Environment) GetIngress() *Ingress {
	if x != nil {
		return x.Ingress
	}
	return nil
}

func (x *Environment) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Environment) GetCron() []*Cron {
	if x != nil {
		return x.Cron
	}
	return nil
}

func (x *Environment) GetMySQL() []*MySQL {
	if x != nil {
		return x.MySQL
	}
	return nil
}

func (x *Environment) GetSMTP() *SMTP {
	if x != nil {
		return x.SMTP
	}
	return nil
}

func (x *Environment) GetBackup() *ScheduledBackup {
	if x != nil {
		return x.Backup
	}
	return nil
}

func (x *Environment) GetSolr() []*Solr {
	if x != nil {
		return x.Solr
	}
	return nil
}

func (x *Environment) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Environment) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *Environment) GetLink() []*Link {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *Environment) GetVolume() []*Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

func (x *Environment) GetDashboard() *EnvironmentDashboard {
	if x != nil {
		return x.Dashboard
	}
	return nil
}

func (x *Environment) GetDaemon() []*Daemon {
	if x != nil {
		return x.Daemon
	}
	return nil
}

func (x *Environment) GetResources() *EnvironmentResources {
	if x != nil {
		return x.Resources
	}
	return nil
}

// *
// Resource utilisation for this environment.
type EnvironmentResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replicas *EnvironmentResourcesReplicas `protobuf:"bytes,1,opt,name=Replicas,proto3" json:"Replicas,omitempty"` // Number of replicas for a given environment.
	CPU      *EnvironmentResourcesCPU      `protobuf:"bytes,2,opt,name=CPU,proto3" json:"CPU,omitempty"`           // CPU utilised by this environment.
	Memory   *EnvironmentResourcesMemory   `protobuf:"bytes,3,opt,name=Memory,proto3" json:"Memory,omitempty"`     // Memory utilised by this environment.
}

func (x *EnvironmentResources) Reset() {
	*x = EnvironmentResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentResources) ProtoMessage() {}

func (x *EnvironmentResources) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentResources.ProtoReflect.Descriptor instead.
func (*EnvironmentResources) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{4}
}

func (x *EnvironmentResources) GetReplicas() *EnvironmentResourcesReplicas {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *EnvironmentResources) GetCPU() *EnvironmentResourcesCPU {
	if x != nil {
		return x.CPU
	}
	return nil
}

func (x *EnvironmentResources) GetMemory() *EnvironmentResourcesMemory {
	if x != nil {
		return x.Memory
	}
	return nil
}

// *
// Replica utilisation for this environment.
type EnvironmentResourcesReplicas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int32 `protobuf:"varint,1,opt,name=Current,proto3" json:"Current,omitempty"` // Current number of replicas for a given environment.
	Min     int32 `protobuf:"varint,2,opt,name=Min,proto3" json:"Min,omitempty"`         // Minimum number of replicas for a given environment.
	Max     int32 `protobuf:"varint,3,opt,name=Max,proto3" json:"Max,omitempty"`         // Minimum number of replicas for a given environment.
}

func (x *EnvironmentResourcesReplicas) Reset() {
	*x = EnvironmentResourcesReplicas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentResourcesReplicas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentResourcesReplicas) ProtoMessage() {}

func (x *EnvironmentResourcesReplicas) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentResourcesReplicas.ProtoReflect.Descriptor instead.
func (*EnvironmentResourcesReplicas) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{5}
}

func (x *EnvironmentResourcesReplicas) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *EnvironmentResourcesReplicas) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *EnvironmentResourcesReplicas) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

// *
// CPU utilisation for this environment.
type EnvironmentResourcesCPU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64 `protobuf:"varint,1,opt,name=Current,proto3" json:"Current,omitempty"` // Current CPU utilisation for a given environment.
	Limit   int64 `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`     // Maximum CPU utilisation for a given environment.
}

func (x *EnvironmentResourcesCPU) Reset() {
	*x = EnvironmentResourcesCPU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentResourcesCPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentResourcesCPU) ProtoMessage() {}

func (x *EnvironmentResourcesCPU) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentResourcesCPU.ProtoReflect.Descriptor instead.
func (*EnvironmentResourcesCPU) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{6}
}

func (x *EnvironmentResourcesCPU) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *EnvironmentResourcesCPU) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// *
// Memory utilisation for this environment.
type EnvironmentResourcesMemory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64 `protobuf:"varint,1,opt,name=Current,proto3" json:"Current,omitempty"` // Number of replicas for a given environment.
	Limit   int64 `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`     // Limit of how many replicas for a given environment.
}

func (x *EnvironmentResourcesMemory) Reset() {
	*x = EnvironmentResourcesMemory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentResourcesMemory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentResourcesMemory) ProtoMessage() {}

func (x *EnvironmentResourcesMemory) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentResourcesMemory.ProtoReflect.Descriptor instead.
func (*EnvironmentResourcesMemory) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{7}
}

func (x *EnvironmentResourcesMemory) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *EnvironmentResourcesMemory) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// *
// Create an environment
type EnvironmentCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment *Environment `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Environment configuration
	Wait        bool         `protobuf:"varint,2,opt,name=Wait,proto3" json:"Wait,omitempty"`              // If this request should wait for the environment to be ready
}

func (x *EnvironmentCreateRequest) Reset() {
	*x = EnvironmentCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentCreateRequest) ProtoMessage() {}

func (x *EnvironmentCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentCreateRequest.ProtoReflect.Descriptor instead.
func (*EnvironmentCreateRequest) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{8}
}

func (x *EnvironmentCreateRequest) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *EnvironmentCreateRequest) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

// *
// Response if the environment was created
type EnvironmentCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"` // Message provided about the environment
}

func (x *EnvironmentCreateResponse) Reset() {
	*x = EnvironmentCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentCreateResponse) ProtoMessage() {}

func (x *EnvironmentCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentCreateResponse.ProtoReflect.Descriptor instead.
func (*EnvironmentCreateResponse) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{9}
}

func (x *EnvironmentCreateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// *
// Delete the environment
type EnvironmentDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"` // Name of the environment
}

func (x *EnvironmentDeleteRequest) Reset() {
	*x = EnvironmentDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentDeleteRequest) ProtoMessage() {}

func (x *EnvironmentDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentDeleteRequest.ProtoReflect.Descriptor instead.
func (*EnvironmentDeleteRequest) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{10}
}

func (x *EnvironmentDeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// *
// Response if the environment was deleted
type EnvironmentDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"` // Current status
}

func (x *EnvironmentDeleteResponse) Reset() {
	*x = EnvironmentDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentDeleteResponse) ProtoMessage() {}

func (x *EnvironmentDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentDeleteResponse.ProtoReflect.Descriptor instead.
func (*EnvironmentDeleteResponse) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{11}
}

func (x *EnvironmentDeleteResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// *
// Request the latest environment status
type EnvironmentGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"` // Name of the environment
}

func (x *EnvironmentGetRequest) Reset() {
	*x = EnvironmentGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentGetRequest) ProtoMessage() {}

func (x *EnvironmentGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentGetRequest.ProtoReflect.Descriptor instead.
func (*EnvironmentGetRequest) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{12}
}

func (x *EnvironmentGetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// *
// Latest environment status
type EnvironmentGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment *Environment `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Environment status
}

func (x *EnvironmentGetResponse) Reset() {
	*x = EnvironmentGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentGetResponse) ProtoMessage() {}

func (x *EnvironmentGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentGetResponse.ProtoReflect.Descriptor instead.
func (*EnvironmentGetResponse) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{13}
}

func (x *EnvironmentGetResponse) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

// *
// Request a list of environment
type EnvironmentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnvironmentListRequest) Reset() {
	*x = EnvironmentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentListRequest) ProtoMessage() {}

func (x *EnvironmentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentListRequest.ProtoReflect.Descriptor instead.
func (*EnvironmentListRequest) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{14}
}

// *
// Returns a list of environments
type EnvironmentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environments []*Environment `protobuf:"bytes,1,rep,name=Environments,proto3" json:"Environments,omitempty"` // List of environments
}

func (x *EnvironmentListResponse) Reset() {
	*x = EnvironmentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentListResponse) ProtoMessage() {}

func (x *EnvironmentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentListResponse.ProtoReflect.Descriptor instead.
func (*EnvironmentListResponse) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{15}
}

func (x *EnvironmentListResponse) GetEnvironments() []*Environment {
	if x != nil {
		return x.Environments
	}
	return nil
}

// *
// Update the environment
type EnvironmentUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment *Environment `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Environment configuration
	Wait        bool         `protobuf:"varint,2,opt,name=Wait,proto3" json:"Wait,omitempty"`              // If this request should wait
}

func (x *EnvironmentUpdateRequest) Reset() {
	*x = EnvironmentUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentUpdateRequest) ProtoMessage() {}

func (x *EnvironmentUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentUpdateRequest.ProtoReflect.Descriptor instead.
func (*EnvironmentUpdateRequest) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{16}
}

func (x *EnvironmentUpdateRequest) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *EnvironmentUpdateRequest) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

// *
// Returns a message if the environment update was successful
type EnvironmentUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"` // Message if the environment was update was successful
}

func (x *EnvironmentUpdateResponse) Reset() {
	*x = EnvironmentUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentUpdateResponse) ProtoMessage() {}

func (x *EnvironmentUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentUpdateResponse.ProtoReflect.Descriptor instead.
func (*EnvironmentUpdateResponse) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{17}
}

func (x *EnvironmentUpdateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// *
// Validate an environment
type EnvironmentValidateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment *Environment `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Environment configuration
}

func (x *EnvironmentValidateRequest) Reset() {
	*x = EnvironmentValidateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentValidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentValidateRequest) ProtoMessage() {}

func (x *EnvironmentValidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentValidateRequest.ProtoReflect.Descriptor instead.
func (*EnvironmentValidateRequest) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{18}
}

func (x *EnvironmentValidateRequest) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

// *
// Findings when validating an environment
type EnvironmentValidateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Findings []*EnvironmentValidateFinding `protobuf:"bytes,1,rep,name=Findings,proto3" json:"Findings,omitempty"` // Findings when validating an environment
}

func (x *EnvironmentValidateResponse) Reset() {
	*x = EnvironmentValidateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentValidateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentValidateResponse) ProtoMessage() {}

func (x *EnvironmentValidateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentValidateResponse.ProtoReflect.Descriptor instead.
func (*EnvironmentValidateResponse) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{19}
}

func (x *EnvironmentValidateResponse) GetFindings() []*EnvironmentValidateFinding {
	if x != nil {
		return x.Findings
	}
	return nil
}

// *
// Finding when validating an environment
type EnvironmentValidateFinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group   string                          `protobuf:"bytes,1,opt,name=Group,proto3" json:"Group,omitempty"`                                              // Group this finding relates to
	Type    EnvironmentValidateFinding_Type `protobuf:"varint,2,opt,name=type,proto3,enum=workflow.EnvironmentValidateFinding_Type" json:"type,omitempty"` // Type of finding
	Message string                          `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`                                          // Message associated with finding
}

func (x *EnvironmentValidateFinding) Reset() {
	*x = EnvironmentValidateFinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentValidateFinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentValidateFinding) ProtoMessage() {}

func (x *EnvironmentValidateFinding) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentValidateFinding.ProtoReflect.Descriptor instead.
func (*EnvironmentValidateFinding) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{20}
}

func (x *EnvironmentValidateFinding) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *EnvironmentValidateFinding) GetType() EnvironmentValidateFinding_Type {
	if x != nil {
		return x.Type
	}
	return EnvironmentValidateFinding_Violation
}

func (x *EnvironmentValidateFinding) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// *
// Error page configuration for an environment
type ErrorPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  string `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`    // Path to error page
	Cache int64  `protobuf:"varint,2,opt,name=Cache,proto3" json:"Cache,omitempty"` // How long to cache for
}

func (x *ErrorPage) Reset() {
	*x = ErrorPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorPage) ProtoMessage() {}

func (x *ErrorPage) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorPage.ProtoReflect.Descriptor instead.
func (*ErrorPage) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{21}
}

func (x *ErrorPage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ErrorPage) GetCache() int64 {
	if x != nil {
		return x.Cache
	}
	return 0
}

// *
// List of error page configuration
type ErrorPages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client *ErrorPage `protobuf:"bytes,1,opt,name=Client,proto3" json:"Client,omitempty"` // Client error pages
	Server *ErrorPage `protobuf:"bytes,2,opt,name=Server,proto3" json:"Server,omitempty"` // Server error pages
}

func (x *ErrorPages) Reset() {
	*x = ErrorPages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorPages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorPages) ProtoMessage() {}

func (x *ErrorPages) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorPages.ProtoReflect.Descriptor instead.
func (*ErrorPages) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{22}
}

func (x *ErrorPages) GetClient() *ErrorPage {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *ErrorPages) GetServer() *ErrorPage {
	if x != nil {
		return x.Server
	}
	return nil
}

// *
// Image repository details
type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repository string `protobuf:"bytes,1,opt,name=Repository,proto3" json:"Repository,omitempty"` // Repository details eg. Application/MySQL
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{23}
}

func (x *Image) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

// *
// Ingress configuration associated with an environment
type Ingress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain       string       `protobuf:"bytes,1,opt,name=Domain,proto3" json:"Domain,omitempty"`                         // Domain environment should respond to
	Routes       []string     `protobuf:"bytes,2,rep,name=Routes,proto3" json:"Routes,omitempty"`                         // Routes associated with an environment
	Headers      []string     `protobuf:"bytes,3,rep,name=Headers,proto3" json:"Headers,omitempty"`                       // Depreciated.
	Cookies      []string     `protobuf:"bytes,4,rep,name=Cookies,proto3" json:"Cookies,omitempty"`                       // Depreciated.
	Certificate  string       `protobuf:"bytes,5,opt,name=Certificate,proto3" json:"Certificate,omitempty"`               // Certificate associated with an environment
	ErrorPages   *ErrorPages  `protobuf:"bytes,6,opt,name=ErrorPages,proto3" json:"ErrorPages,omitempty"`                 // Error pages configuration
	Proxy        []*Proxy     `protobuf:"bytes,7,rep,name=Proxy,proto3" json:"Proxy,omitempty"`                           // Proxy configuration associated with an environment
	Mode         Ingress_Mode `protobuf:"varint,8,opt,name=mode,proto3,enum=workflow.Ingress_Mode" json:"mode,omitempty"` // The mode this CDN is configured for
	LoadBalancer string       `protobuf:"bytes,9,opt,name=LoadBalancer,proto3" json:"LoadBalancer,omitempty"`             // Load balancer configuration
	Cache        *Cache       `protobuf:"bytes,10,opt,name=Cache,proto3" json:"Cache,omitempty"`                          // Cache configuration
}

func (x *Ingress) Reset() {
	*x = Ingress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ingress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ingress) ProtoMessage() {}

func (x *Ingress) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ingress.ProtoReflect.Descriptor instead.
func (*Ingress) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{24}
}

func (x *Ingress) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Ingress) GetRoutes() []string {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *Ingress) GetHeaders() []string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Ingress) GetCookies() []string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *Ingress) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *Ingress) GetErrorPages() *ErrorPages {
	if x != nil {
		return x.ErrorPages
	}
	return nil
}

func (x *Ingress) GetProxy() []*Proxy {
	if x != nil {
		return x.Proxy
	}
	return nil
}

func (x *Ingress) GetMode() Ingress_Mode {
	if x != nil {
		return x.Mode
	}
	return Ingress_Default
}

func (x *Ingress) GetLoadBalancer() string {
	if x != nil {
		return x.LoadBalancer
	}
	return ""
}

func (x *Ingress) GetCache() *Cache {
	if x != nil {
		return x.Cache
	}
	return nil
}

// *
// MySQL configuration
type MySQL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string              `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`         // Name of the database
	Sanitize *MySQLImageSanitize `protobuf:"bytes,2,opt,name=Sanitize,proto3" json:"Sanitize,omitempty"` // Sanitization configuration for MySQL
	Image    *MySQLImage         `protobuf:"bytes,3,opt,name=Image,proto3" json:"Image,omitempty"`       // Image configuration for MySQL
}

func (x *MySQL) Reset() {
	*x = MySQL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySQL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySQL) ProtoMessage() {}

func (x *MySQL) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySQL.ProtoReflect.Descriptor instead.
func (*MySQL) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{25}
}

func (x *MySQL) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MySQL) GetSanitize() *MySQLImageSanitize {
	if x != nil {
		return x.Sanitize
	}
	return nil
}

func (x *MySQL) GetImage() *MySQLImage {
	if x != nil {
		return x.Image
	}
	return nil
}

// *
// MySQL image configuration for an environment
type MySQLImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule string         `protobuf:"bytes,1,opt,name=Schedule,proto3" json:"Schedule,omitempty"` // How often to build a MySQL image
	Sanitize *MySQLSanitize `protobuf:"bytes,2,opt,name=Sanitize,proto3" json:"Sanitize,omitempty"` // Sanitization rules for image building
	Suspend  bool           `protobuf:"varint,3,opt,name=Suspend,proto3" json:"Suspend,omitempty"`  // If the MySQL image building is suspended
}

func (x *MySQLImage) Reset() {
	*x = MySQLImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySQLImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySQLImage) ProtoMessage() {}

func (x *MySQLImage) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySQLImage.ProtoReflect.Descriptor instead.
func (*MySQLImage) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{26}
}

func (x *MySQLImage) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *MySQLImage) GetSanitize() *MySQLSanitize {
	if x != nil {
		return x.Sanitize
	}
	return nil
}

func (x *MySQLImage) GetSuspend() bool {
	if x != nil {
		return x.Suspend
	}
	return false
}

// *
// MySQL image sanitization rules
type MySQLSanitize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewrite []*MySQLSanitizeRewrite `protobuf:"bytes,1,rep,name=Rewrite,proto3" json:"Rewrite,omitempty"` // Rewrite table data
	NoData  []string                `protobuf:"bytes,2,rep,name=NoData,proto3" json:"NoData,omitempty"`   // Export tables with no data
	Ignore  []string                `protobuf:"bytes,3,rep,name=Ignore,proto3" json:"Ignore,omitempty"`   // Ingore tables
	Where   []*MySQLSanitizeWhere   `protobuf:"bytes,4,rep,name=Where,proto3" json:"Where,omitempty"`     // Update table data
}

func (x *MySQLSanitize) Reset() {
	*x = MySQLSanitize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySQLSanitize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySQLSanitize) ProtoMessage() {}

func (x *MySQLSanitize) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySQLSanitize.ProtoReflect.Descriptor instead.
func (*MySQLSanitize) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{27}
}

func (x *MySQLSanitize) GetRewrite() []*MySQLSanitizeRewrite {
	if x != nil {
		return x.Rewrite
	}
	return nil
}

func (x *MySQLSanitize) GetNoData() []string {
	if x != nil {
		return x.NoData
	}
	return nil
}

func (x *MySQLSanitize) GetIgnore() []string {
	if x != nil {
		return x.Ignore
	}
	return nil
}

func (x *MySQLSanitize) GetWhere() []*MySQLSanitizeWhere {
	if x != nil {
		return x.Where
	}
	return nil
}

// *
// MySQL sanitization rules
type MySQLImageSanitize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Backup *SanitizationPolicy `protobuf:"bytes,1,opt,name=Backup,proto3" json:"Backup,omitempty"` // Rules applied to a backup
	Image  *SanitizationPolicy `protobuf:"bytes,2,opt,name=Image,proto3" json:"Image,omitempty"`   // Rules applied to an image
}

func (x *MySQLImageSanitize) Reset() {
	*x = MySQLImageSanitize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySQLImageSanitize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySQLImageSanitize) ProtoMessage() {}

func (x *MySQLImageSanitize) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySQLImageSanitize.ProtoReflect.Descriptor instead.
func (*MySQLImageSanitize) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{28}
}

func (x *MySQLImageSanitize) GetBackup() *SanitizationPolicy {
	if x != nil {
		return x.Backup
	}
	return nil
}

func (x *MySQLImageSanitize) GetImage() *SanitizationPolicy {
	if x != nil {
		return x.Image
	}
	return nil
}

// *
// Sanitization policy configuration
type SanitizationPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy   string             `protobuf:"bytes,1,opt,name=Policy,proto3" json:"Policy,omitempty"`     // Policy name
	Rules    *SanitizationRules `protobuf:"bytes,2,opt,name=Rules,proto3" json:"Rules,omitempty"`       // Rules to apply
	Policies []string           `protobuf:"bytes,3,rep,name=Policies,proto3" json:"Policies,omitempty"` // Policies to apply
}

func (x *SanitizationPolicy) Reset() {
	*x = SanitizationPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SanitizationPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanitizationPolicy) ProtoMessage() {}

func (x *SanitizationPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanitizationPolicy.ProtoReflect.Descriptor instead.
func (*SanitizationPolicy) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{29}
}

func (x *SanitizationPolicy) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

func (x *SanitizationPolicy) GetRules() *SanitizationRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *SanitizationPolicy) GetPolicies() []string {
	if x != nil {
		return x.Policies
	}
	return nil
}

// *
// Ingress configuration associated with an environment
type SanitizationRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewrite []*SanitizationRewrite `protobuf:"bytes,1,rep,name=Rewrite,proto3" json:"Rewrite,omitempty"` // Rewrite table data
	NoData  []string               `protobuf:"bytes,2,rep,name=NoData,proto3" json:"NoData,omitempty"`   // Export tables with no data
	Ignore  []string               `protobuf:"bytes,3,rep,name=Ignore,proto3" json:"Ignore,omitempty"`   // Ingore tables
	Where   []*SanitizationWhere   `protobuf:"bytes,4,rep,name=Where,proto3" json:"Where,omitempty"`     // Update table data
}

func (x *SanitizationRules) Reset() {
	*x = SanitizationRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SanitizationRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanitizationRules) ProtoMessage() {}

func (x *SanitizationRules) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanitizationRules.ProtoReflect.Descriptor instead.
func (*SanitizationRules) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{30}
}

func (x *SanitizationRules) GetRewrite() []*SanitizationRewrite {
	if x != nil {
		return x.Rewrite
	}
	return nil
}

func (x *SanitizationRules) GetNoData() []string {
	if x != nil {
		return x.NoData
	}
	return nil
}

func (x *SanitizationRules) GetIgnore() []string {
	if x != nil {
		return x.Ignore
	}
	return nil
}

func (x *SanitizationRules) GetWhere() []*SanitizationWhere {
	if x != nil {
		return x.Where
	}
	return nil
}

// *
// Database sanitize rewrite configuration
type SanitizationRewrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string                     `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`     // Name of the table
	Tables []*SanitizationRewriteItem `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"` // How to rewrite
}

func (x *SanitizationRewrite) Reset() {
	*x = SanitizationRewrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SanitizationRewrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanitizationRewrite) ProtoMessage() {}

func (x *SanitizationRewrite) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanitizationRewrite.ProtoReflect.Descriptor instead.
func (*SanitizationRewrite) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{31}
}

func (x *SanitizationRewrite) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SanitizationRewrite) GetTables() []*SanitizationRewriteItem {
	if x != nil {
		return x.Tables
	}
	return nil
}

// *
// Database sanitize rewrite configuration
type MySQLSanitizeRewrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string                       `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`     // Name of the table
	Tables []*MySQLSanitizeRewriteTable `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"` // How to rewrite
}

func (x *MySQLSanitizeRewrite) Reset() {
	*x = MySQLSanitizeRewrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySQLSanitizeRewrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySQLSanitizeRewrite) ProtoMessage() {}

func (x *MySQLSanitizeRewrite) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySQLSanitizeRewrite.ProtoReflect.Descriptor instead.
func (*MySQLSanitizeRewrite) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{32}
}

func (x *MySQLSanitizeRewrite) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MySQLSanitizeRewrite) GetTables() []*MySQLSanitizeRewriteTable {
	if x != nil {
		return x.Tables
	}
	return nil
}

// *
// Database sanitize rewrite configuration
type MySQLSanitizeRewriteTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`   // Name of the table
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"` // Value to rewrite
}

func (x *MySQLSanitizeRewriteTable) Reset() {
	*x = MySQLSanitizeRewriteTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySQLSanitizeRewriteTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySQLSanitizeRewriteTable) ProtoMessage() {}

func (x *MySQLSanitizeRewriteTable) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySQLSanitizeRewriteTable.ProtoReflect.Descriptor instead.
func (*MySQLSanitizeRewriteTable) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{33}
}

func (x *MySQLSanitizeRewriteTable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MySQLSanitizeRewriteTable) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// *
// Database sanitize rewrite configuration
type SanitizationRewriteItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`   // Name of the table
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"` // Value to rewrite
}

func (x *SanitizationRewriteItem) Reset() {
	*x = SanitizationRewriteItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SanitizationRewriteItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanitizationRewriteItem) ProtoMessage() {}

func (x *SanitizationRewriteItem) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanitizationRewriteItem.ProtoReflect.Descriptor instead.
func (*SanitizationRewriteItem) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{34}
}

func (x *SanitizationRewriteItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SanitizationRewriteItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// *
// Database sanitize rewrite configuration
type MySQLSanitizeRewriteTableSanitizationRewrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`   // Name of the table
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"` // Value to rewrite
}

func (x *MySQLSanitizeRewriteTableSanitizationRewrite) Reset() {
	*x = MySQLSanitizeRewriteTableSanitizationRewrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySQLSanitizeRewriteTableSanitizationRewrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySQLSanitizeRewriteTableSanitizationRewrite) ProtoMessage() {}

func (x *MySQLSanitizeRewriteTableSanitizationRewrite) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySQLSanitizeRewriteTableSanitizationRewrite.ProtoReflect.Descriptor instead.
func (*MySQLSanitizeRewriteTableSanitizationRewrite) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{35}
}

func (x *MySQLSanitizeRewriteTableSanitizationRewrite) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MySQLSanitizeRewriteTableSanitizationRewrite) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// *
// Database sanitize where configuration
type MySQLSanitizeWhere struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`   // Name of the table
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"` // Value to rewrite
}

func (x *MySQLSanitizeWhere) Reset() {
	*x = MySQLSanitizeWhere{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySQLSanitizeWhere) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySQLSanitizeWhere) ProtoMessage() {}

func (x *MySQLSanitizeWhere) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySQLSanitizeWhere.ProtoReflect.Descriptor instead.
func (*MySQLSanitizeWhere) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{36}
}

func (x *MySQLSanitizeWhere) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MySQLSanitizeWhere) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// *
// Database sanitize where configuration
type SanitizationWhere struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`   // Name of the table
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"` // Value to rewrite
}

func (x *SanitizationWhere) Reset() {
	*x = SanitizationWhere{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SanitizationWhere) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SanitizationWhere) ProtoMessage() {}

func (x *SanitizationWhere) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SanitizationWhere.ProtoReflect.Descriptor instead.
func (*SanitizationWhere) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{37}
}

func (x *SanitizationWhere) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SanitizationWhere) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// *
// Proxy configuration
type Proxy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      string       `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`           // Identifier of the proxy
	Path    string       `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`       // Path to proxy
	Origin  string       `protobuf:"bytes,3,opt,name=Origin,proto3" json:"Origin,omitempty"`   // Origin to connect to
	Headers []string     `protobuf:"bytes,4,rep,name=Headers,proto3" json:"Headers,omitempty"` // Depreciated.
	Cookies []string     `protobuf:"bytes,5,rep,name=Cookies,proto3" json:"Cookies,omitempty"` // Depreciated.
	Cache   *Cache       `protobuf:"bytes,10,opt,name=Cache,proto3" json:"Cache,omitempty"`    // Cache configuration
	Target  *ProxyTarget `protobuf:"bytes,11,opt,name=Target,proto3" json:"Target,omitempty"`  // Internal project target
}

func (x *Proxy) Reset() {
	*x = Proxy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proxy) ProtoMessage() {}

func (x *Proxy) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proxy.ProtoReflect.Descriptor instead.
func (*Proxy) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{38}
}

func (x *Proxy) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Proxy) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Proxy) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *Proxy) GetHeaders() []string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Proxy) GetCookies() []string {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *Proxy) GetCache() *Cache {
	if x != nil {
		return x.Cache
	}
	return nil
}

func (x *Proxy) GetTarget() *ProxyTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

// *
// Proxy target configuration
type ProxyTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project  *ProxyTargetProject  `protobuf:"bytes,1,opt,name=Project,proto3" json:"Project,omitempty"`   // Name of the project
	External *ProxyTargetExternal `protobuf:"bytes,2,opt,name=External,proto3" json:"External,omitempty"` // If the target is external
}

func (x *ProxyTarget) Reset() {
	*x = ProxyTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyTarget) ProtoMessage() {}

func (x *ProxyTarget) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyTarget.ProtoReflect.Descriptor instead.
func (*ProxyTarget) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{39}
}

func (x *ProxyTarget) GetProject() *ProxyTargetProject {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *ProxyTarget) GetExternal() *ProxyTargetExternal {
	if x != nil {
		return x.External
	}
	return nil
}

// *
// Proxy target project configuration
type ProxyTargetProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`               // Name of the project
	Environment string `protobuf:"bytes,2,opt,name=Environment,proto3" json:"Environment,omitempty"` // Name of the environment
}

func (x *ProxyTargetProject) Reset() {
	*x = ProxyTargetProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyTargetProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyTargetProject) ProtoMessage() {}

func (x *ProxyTargetProject) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyTargetProject.ProtoReflect.Descriptor instead.
func (*ProxyTargetProject) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{40}
}

func (x *ProxyTargetProject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProxyTargetProject) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Proxy target external configuration
type ProxyTargetExternal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=Domain,proto3" json:"Domain,omitempty"` // Domain to connect to
}

func (x *ProxyTargetExternal) Reset() {
	*x = ProxyTargetExternal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyTargetExternal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyTargetExternal) ProtoMessage() {}

func (x *ProxyTargetExternal) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyTargetExternal.ProtoReflect.Descriptor instead.
func (*ProxyTargetExternal) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{41}
}

func (x *ProxyTargetExternal) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// *
// Environment backup schedule
type ScheduledBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule string                  `protobuf:"bytes,1,opt,name=Schedule,proto3" json:"Schedule,omitempty"` // How often to backup
	Volume   []*ScheduleBackupVolume `protobuf:"bytes,2,rep,name=Volume,proto3" json:"Volume,omitempty"`     // Volumes to backup
	Suspend  bool                    `protobuf:"varint,3,opt,name=Suspend,proto3" json:"Suspend,omitempty"`  // If backups as suspended
}

func (x *ScheduledBackup) Reset() {
	*x = ScheduledBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledBackup) ProtoMessage() {}

func (x *ScheduledBackup) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledBackup.ProtoReflect.Descriptor instead.
func (*ScheduledBackup) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{42}
}

func (x *ScheduledBackup) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *ScheduledBackup) GetVolume() []*ScheduleBackupVolume {
	if x != nil {
		return x.Volume
	}
	return nil
}

func (x *ScheduledBackup) GetSuspend() bool {
	if x != nil {
		return x.Suspend
	}
	return false
}

// *
// Backup volume configuration
type ScheduleBackupVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string                     `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`        // Name of the volume
	Exclude bool                       `protobuf:"varint,2,opt,name=Exclude,proto3" json:"Exclude,omitempty"` // Exclude rules for backup
	Paths   *ScheduleBackupVolumePaths `protobuf:"bytes,3,opt,name=Paths,proto3" json:"Paths,omitempty"`      // Volume path configuration
}

func (x *ScheduleBackupVolume) Reset() {
	*x = ScheduleBackupVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleBackupVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleBackupVolume) ProtoMessage() {}

func (x *ScheduleBackupVolume) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleBackupVolume.ProtoReflect.Descriptor instead.
func (*ScheduleBackupVolume) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{43}
}

func (x *ScheduleBackupVolume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScheduleBackupVolume) GetExclude() bool {
	if x != nil {
		return x.Exclude
	}
	return false
}

func (x *ScheduleBackupVolume) GetPaths() *ScheduleBackupVolumePaths {
	if x != nil {
		return x.Paths
	}
	return nil
}

// *
// Backup volume configuration
type ScheduleBackupVolumePaths struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Include []string `protobuf:"bytes,1,rep,name=Include,proto3" json:"Include,omitempty"` // Include these paths
	Exclude []string `protobuf:"bytes,2,rep,name=Exclude,proto3" json:"Exclude,omitempty"` // Exclude these paths
}

func (x *ScheduleBackupVolumePaths) Reset() {
	*x = ScheduleBackupVolumePaths{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleBackupVolumePaths) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleBackupVolumePaths) ProtoMessage() {}

func (x *ScheduleBackupVolumePaths) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleBackupVolumePaths.ProtoReflect.Descriptor instead.
func (*ScheduleBackupVolumePaths) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{44}
}

func (x *ScheduleBackupVolumePaths) GetInclude() []string {
	if x != nil {
		return x.Include
	}
	return nil
}

func (x *ScheduleBackupVolumePaths) GetExclude() []string {
	if x != nil {
		return x.Exclude
	}
	return nil
}

// *
// SMTP environment configuration
type SMTP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to send FROM
	Address string `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
}

func (x *SMTP) Reset() {
	*x = SMTP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMTP) ProtoMessage() {}

func (x *SMTP) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMTP.ProtoReflect.Descriptor instead.
func (*SMTP) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{45}
}

func (x *SMTP) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// *
// Solr configuration
type Solr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`       // Name of the Solr instance
	Version string `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"` // Version of the Solr instance
}

func (x *Solr) Reset() {
	*x = Solr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Solr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Solr) ProtoMessage() {}

func (x *Solr) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Solr.ProtoReflect.Descriptor instead.
func (*Solr) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{46}
}

func (x *Solr) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Solr) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// *
// Link environment to other environment
type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`               // Name of the link
	Project     string `protobuf:"bytes,2,opt,name=Project,proto3" json:"Project,omitempty"`         // Name of the project to link to
	Environment string `protobuf:"bytes,3,opt,name=Environment,proto3" json:"Environment,omitempty"` // Environment name
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{47}
}

func (x *Link) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Link) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *Link) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Volume configuration
type Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string        `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`     // Name of the volume
	Backup *VolumeBackup `protobuf:"bytes,2,opt,name=Backup,proto3" json:"Backup,omitempty"` // Backup configuration
}

func (x *Volume) Reset() {
	*x = Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{48}
}

func (x *Volume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Volume) GetBackup() *VolumeBackup {
	if x != nil {
		return x.Backup
	}
	return nil
}

// *
// Volume backup configuration
type VolumeBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skip     bool                  `protobuf:"varint,1,opt,name=Skip,proto3" json:"Skip,omitempty"`        // Skip this volume from backups
	Sanitize *VolumeBackupSanitize `protobuf:"bytes,2,opt,name=Sanitize,proto3" json:"Sanitize,omitempty"` // Sanitize this volume
}

func (x *VolumeBackup) Reset() {
	*x = VolumeBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeBackup) ProtoMessage() {}

func (x *VolumeBackup) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeBackup.ProtoReflect.Descriptor instead.
func (*VolumeBackup) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{49}
}

func (x *VolumeBackup) GetSkip() bool {
	if x != nil {
		return x.Skip
	}
	return false
}

func (x *VolumeBackup) GetSanitize() *VolumeBackupSanitize {
	if x != nil {
		return x.Sanitize
	}
	return nil
}

// *
// Volume backup sanitization configuration
type VolumeBackupSanitize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policies []string                   `protobuf:"bytes,1,rep,name=Policies,proto3" json:"Policies,omitempty"` // Policies associated with backing up this volume
	Rules    *VolumeBackupSanitizeRules `protobuf:"bytes,2,opt,name=Rules,proto3" json:"Rules,omitempty"`       // Rules associated with backing up this volume
}

func (x *VolumeBackupSanitize) Reset() {
	*x = VolumeBackupSanitize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeBackupSanitize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeBackupSanitize) ProtoMessage() {}

func (x *VolumeBackupSanitize) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeBackupSanitize.ProtoReflect.Descriptor instead.
func (*VolumeBackupSanitize) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{50}
}

func (x *VolumeBackupSanitize) GetPolicies() []string {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *VolumeBackupSanitize) GetRules() *VolumeBackupSanitizeRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

// *
// Volume backup sanitization configuration
type VolumeBackupSanitizeRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exclude []string `protobuf:"bytes,1,rep,name=Exclude,proto3" json:"Exclude,omitempty"` // Excluded paths from backup
}

func (x *VolumeBackupSanitizeRules) Reset() {
	*x = VolumeBackupSanitizeRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeBackupSanitizeRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeBackupSanitizeRules) ProtoMessage() {}

func (x *VolumeBackupSanitizeRules) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeBackupSanitizeRules.ProtoReflect.Descriptor instead.
func (*VolumeBackupSanitizeRules) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{51}
}

func (x *VolumeBackupSanitizeRules) GetExclude() []string {
	if x != nil {
		return x.Exclude
	}
	return nil
}

// *
// Environment dashboard configuration
type EnvironmentDashboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"` // Link to dashboard
}

func (x *EnvironmentDashboard) Reset() {
	*x = EnvironmentDashboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_environment_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentDashboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentDashboard) ProtoMessage() {}

func (x *EnvironmentDashboard) ProtoReflect() protoreflect.Message {
	mi := &file_environment_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentDashboard.ProtoReflect.Descriptor instead.
func (*EnvironmentDashboard) Descriptor() ([]byte, []int) {
	return file_environment_proto_rawDescGZIP(), []int{52}
}

func (x *EnvironmentDashboard) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

var File_environment_proto protoreflect.FileDescriptor

var file_environment_proto_rawDesc = []byte{
	0x0a, 0x11, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0x1f, 0x0a,
	0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x50,
	0x0a, 0x04, 0x43, 0x72, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x22, 0x36, 0x0a, 0x06, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x93, 0x06, 0x0a, 0x0b, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x49, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x49, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x43, 0x72,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x52, 0x04, 0x43, 0x72, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x05, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x52, 0x05,
	0x4d, 0x79, 0x53, 0x51, 0x4c, 0x12, 0x22, 0x0a, 0x04, 0x53, 0x4d, 0x54, 0x50, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53,
	0x4d, 0x54, 0x50, 0x52, 0x04, 0x53, 0x4d, 0x54, 0x50, 0x12, 0x31, 0x0a, 0x06, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x22, 0x0a, 0x04,
	0x53, 0x6f, 0x6c, 0x72, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x6f, 0x6c, 0x72, 0x52, 0x04, 0x53, 0x6f, 0x6c, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04,
	0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x28, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x09, 0x44,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x44, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x06, 0x44, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x22, 0x1c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x72, 0x75, 0x70, 0x61, 0x6c, 0x10, 0x01, 0x22, 0xcd,
	0x01, 0x0a, 0x14, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x52, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x33, 0x0a, 0x03, 0x43,
	0x50, 0x55, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x43, 0x50, 0x55, 0x52, 0x03, 0x43, 0x50, 0x55,
	0x12, 0x3c, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x5c,
	0x0a, 0x1c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x4d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x61,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x4d, 0x61, 0x78, 0x22, 0x49, 0x0a, 0x17,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x43, 0x50, 0x55, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x4c, 0x0a, 0x1a, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x67, 0x0a, 0x18, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x61,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x57, 0x61, 0x69, 0x74, 0x22, 0x35,
	0x0a, 0x19, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x18, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x19, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2b, 0x0a, 0x15, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x16, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x17, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x0c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x67, 0x0a, 0x18, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x57, 0x61, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x57,
	0x61, 0x69, 0x74, 0x22, 0x35, 0x0a, 0x19, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x55, 0x0a, 0x1a, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x5f, 0x0a, 0x1b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x1a, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x22, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x69, 0x6f, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x10, 0x01, 0x22, 0x35, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x22, 0x66, 0x0a, 0x0a, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x06,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x06, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x22, 0x27, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x86, 0x03, 0x0a,
	0x07, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x34,
	0x0a, 0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x65, 0x73, 0x52, 0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x52, 0x05, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x2a, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x6f, 0x61, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4c,
	0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x05, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x22, 0x21, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x10, 0x01, 0x22, 0x81, 0x01, 0x0a, 0x05, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6e, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x52, 0x08, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x12, 0x2a, 0x0a,
	0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x77, 0x0a, 0x0a, 0x4d, 0x79, 0x53,
	0x51, 0x4c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x52, 0x08,
	0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x73, 0x70, 0x65,
	0x6e, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x0d, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x61, 0x6e, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x52, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x52, 0x07, 0x52, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0x32,
	0x0a, 0x05, 0x57, 0x68, 0x65, 0x72, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x61,
	0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x57, 0x68, 0x65, 0x72, 0x65, 0x52, 0x05, 0x57, 0x68, 0x65,
	0x72, 0x65, 0x22, 0x7e, 0x0a, 0x12, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x32,
	0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x05, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x22, 0x7b, 0x0a, 0x12, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x31, 0x0a, 0x05, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x61, 0x6e, 0x69, 0x74,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22,
	0xaf, 0x01, 0x0a, 0x11, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x52, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x52, 0x07, 0x52, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0x31,
	0x0a, 0x05, 0x57, 0x68, 0x65, 0x72, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x68, 0x65, 0x72, 0x65, 0x52, 0x05, 0x57, 0x68, 0x65, 0x72,
	0x65, 0x22, 0x64, 0x0a, 0x13, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x06,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x14, 0x4d, 0x79, 0x53, 0x51, 0x4c,
	0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d,
	0x79, 0x53, 0x51, 0x4c, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x22, 0x45, 0x0a, 0x19, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x43, 0x0a, 0x17, 0x53, 0x61, 0x6e, 0x69, 0x74,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x58, 0x0a, 0x2c,
	0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x12, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53,
	0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x57, 0x68, 0x65, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x11, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x68, 0x65, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12,
	0x25, 0x0a, 0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52,
	0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x39, 0x0a,
	0x08, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x08,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x22, 0x4a, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x2d, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x22, 0x7f, 0x0a, 0x0f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75,
	0x73, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x22, 0x7f, 0x0a, 0x14, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x50, 0x61,
	0x74, 0x68, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x52, 0x05,
	0x50, 0x61, 0x74, 0x68, 0x73, 0x22, 0x4f, 0x0a, 0x19, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x45,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x22, 0x20, 0x0a, 0x04, 0x53, 0x4d, 0x54, 0x50, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x34, 0x0a, 0x04, 0x53, 0x6f, 0x6c, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x56,
	0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x22, 0x5e, 0x0a, 0x0c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6b, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x53, 0x6b, 0x69, 0x70, 0x12, 0x3a, 0x0a, 0x08, 0x53, 0x61, 0x6e, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x53, 0x61, 0x6e, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x22, 0x6d, 0x0a, 0x14, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53,
	0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x19, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x53, 0x61, 0x6e, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x22, 0x28, 0x0a, 0x14, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x55, 0x52, 0x4c, 0x32, 0x86, 0x04, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x1f, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x22,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x55, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x59, 0x0a, 0x08, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_environment_proto_rawDescOnce sync.Once
	file_environment_proto_rawDescData = file_environment_proto_rawDesc
)

func file_environment_proto_rawDescGZIP() []byte {
	file_environment_proto_rawDescOnce.Do(func() {
		file_environment_proto_rawDescData = protoimpl.X.CompressGZIP(file_environment_proto_rawDescData)
	})
	return file_environment_proto_rawDescData
}

var file_environment_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_environment_proto_msgTypes = make([]protoimpl.MessageInfo, 53)
var file_environment_proto_goTypes = []interface{}{
	(Environment_Type)(0),                                // 0: workflow.Environment.Type
	(EnvironmentValidateFinding_Type)(0),                 // 1: workflow.EnvironmentValidateFinding.Type
	(Ingress_Mode)(0),                                    // 2: workflow.Ingress.Mode
	(*Cache)(nil),                                        // 3: workflow.Cache
	(*Cron)(nil),                                         // 4: workflow.Cron
	(*Daemon)(nil),                                       // 5: workflow.Daemon
	(*Environment)(nil),                                  // 6: workflow.Environment
	(*EnvironmentResources)(nil),                         // 7: workflow.EnvironmentResources
	(*EnvironmentResourcesReplicas)(nil),                 // 8: workflow.EnvironmentResourcesReplicas
	(*EnvironmentResourcesCPU)(nil),                      // 9: workflow.EnvironmentResourcesCPU
	(*EnvironmentResourcesMemory)(nil),                   // 10: workflow.EnvironmentResourcesMemory
	(*EnvironmentCreateRequest)(nil),                     // 11: workflow.EnvironmentCreateRequest
	(*EnvironmentCreateResponse)(nil),                    // 12: workflow.EnvironmentCreateResponse
	(*EnvironmentDeleteRequest)(nil),                     // 13: workflow.EnvironmentDeleteRequest
	(*EnvironmentDeleteResponse)(nil),                    // 14: workflow.EnvironmentDeleteResponse
	(*EnvironmentGetRequest)(nil),                        // 15: workflow.EnvironmentGetRequest
	(*EnvironmentGetResponse)(nil),                       // 16: workflow.EnvironmentGetResponse
	(*EnvironmentListRequest)(nil),                       // 17: workflow.EnvironmentListRequest
	(*EnvironmentListResponse)(nil),                      // 18: workflow.EnvironmentListResponse
	(*EnvironmentUpdateRequest)(nil),                     // 19: workflow.EnvironmentUpdateRequest
	(*EnvironmentUpdateResponse)(nil),                    // 20: workflow.EnvironmentUpdateResponse
	(*EnvironmentValidateRequest)(nil),                   // 21: workflow.EnvironmentValidateRequest
	(*EnvironmentValidateResponse)(nil),                  // 22: workflow.EnvironmentValidateResponse
	(*EnvironmentValidateFinding)(nil),                   // 23: workflow.EnvironmentValidateFinding
	(*ErrorPage)(nil),                                    // 24: workflow.ErrorPage
	(*ErrorPages)(nil),                                   // 25: workflow.ErrorPages
	(*Image)(nil),                                        // 26: workflow.Image
	(*Ingress)(nil),                                      // 27: workflow.Ingress
	(*MySQL)(nil),                                        // 28: workflow.MySQL
	(*MySQLImage)(nil),                                   // 29: workflow.MySQLImage
	(*MySQLSanitize)(nil),                                // 30: workflow.MySQLSanitize
	(*MySQLImageSanitize)(nil),                           // 31: workflow.MySQLImageSanitize
	(*SanitizationPolicy)(nil),                           // 32: workflow.SanitizationPolicy
	(*SanitizationRules)(nil),                            // 33: workflow.SanitizationRules
	(*SanitizationRewrite)(nil),                          // 34: workflow.SanitizationRewrite
	(*MySQLSanitizeRewrite)(nil),                         // 35: workflow.MySQLSanitizeRewrite
	(*MySQLSanitizeRewriteTable)(nil),                    // 36: workflow.MySQLSanitizeRewriteTable
	(*SanitizationRewriteItem)(nil),                      // 37: workflow.SanitizationRewriteItem
	(*MySQLSanitizeRewriteTableSanitizationRewrite)(nil), // 38: workflow.MySQLSanitizeRewriteTableSanitizationRewrite
	(*MySQLSanitizeWhere)(nil),                           // 39: workflow.MySQLSanitizeWhere
	(*SanitizationWhere)(nil),                            // 40: workflow.SanitizationWhere
	(*Proxy)(nil),                                        // 41: workflow.Proxy
	(*ProxyTarget)(nil),                                  // 42: workflow.ProxyTarget
	(*ProxyTargetProject)(nil),                           // 43: workflow.ProxyTargetProject
	(*ProxyTargetExternal)(nil),                          // 44: workflow.ProxyTargetExternal
	(*ScheduledBackup)(nil),                              // 45: workflow.ScheduledBackup
	(*ScheduleBackupVolume)(nil),                         // 46: workflow.ScheduleBackupVolume
	(*ScheduleBackupVolumePaths)(nil),                    // 47: workflow.ScheduleBackupVolumePaths
	(*SMTP)(nil),                                         // 48: workflow.SMTP
	(*Solr)(nil),                                         // 49: workflow.Solr
	(*Link)(nil),                                         // 50: workflow.Link
	(*Volume)(nil),                                       // 51: workflow.Volume
	(*VolumeBackup)(nil),                                 // 52: workflow.VolumeBackup
	(*VolumeBackupSanitize)(nil),                         // 53: workflow.VolumeBackupSanitize
	(*VolumeBackupSanitizeRules)(nil),                    // 54: workflow.VolumeBackupSanitizeRules
	(*EnvironmentDashboard)(nil),                         // 55: workflow.EnvironmentDashboard
}
var file_environment_proto_depIdxs = []int32{
	0,  // 0: workflow.Environment.type:type_name -> workflow.Environment.Type
	27, // 1: workflow.Environment.Ingress:type_name -> workflow.Ingress
	26, // 2: workflow.Environment.Image:type_name -> workflow.Image
	4,  // 3: workflow.Environment.Cron:type_name -> workflow.Cron
	28, // 4: workflow.Environment.MySQL:type_name -> workflow.MySQL
	48, // 5: workflow.Environment.SMTP:type_name -> workflow.SMTP
	45, // 6: workflow.Environment.Backup:type_name -> workflow.ScheduledBackup
	49, // 7: workflow.Environment.Solr:type_name -> workflow.Solr
	50, // 8: workflow.Environment.Link:type_name -> workflow.Link
	51, // 9: workflow.Environment.Volume:type_name -> workflow.Volume
	55, // 10: workflow.Environment.Dashboard:type_name -> workflow.EnvironmentDashboard
	5,  // 11: workflow.Environment.Daemon:type_name -> workflow.Daemon
	7,  // 12: workflow.Environment.Resources:type_name -> workflow.EnvironmentResources
	8,  // 13: workflow.EnvironmentResources.Replicas:type_name -> workflow.EnvironmentResourcesReplicas
	9,  // 14: workflow.EnvironmentResources.CPU:type_name -> workflow.EnvironmentResourcesCPU
	10, // 15: workflow.EnvironmentResources.Memory:type_name -> workflow.EnvironmentResourcesMemory
	6,  // 16: workflow.EnvironmentCreateRequest.Environment:type_name -> workflow.Environment
	6,  // 17: workflow.EnvironmentGetResponse.Environment:type_name -> workflow.Environment
	6,  // 18: workflow.EnvironmentListResponse.Environments:type_name -> workflow.Environment
	6,  // 19: workflow.EnvironmentUpdateRequest.Environment:type_name -> workflow.Environment
	6,  // 20: workflow.EnvironmentValidateRequest.Environment:type_name -> workflow.Environment
	23, // 21: workflow.EnvironmentValidateResponse.Findings:type_name -> workflow.EnvironmentValidateFinding
	1,  // 22: workflow.EnvironmentValidateFinding.type:type_name -> workflow.EnvironmentValidateFinding.Type
	24, // 23: workflow.ErrorPages.Client:type_name -> workflow.ErrorPage
	24, // 24: workflow.ErrorPages.Server:type_name -> workflow.ErrorPage
	25, // 25: workflow.Ingress.ErrorPages:type_name -> workflow.ErrorPages
	41, // 26: workflow.Ingress.Proxy:type_name -> workflow.Proxy
	2,  // 27: workflow.Ingress.mode:type_name -> workflow.Ingress.Mode
	3,  // 28: workflow.Ingress.Cache:type_name -> workflow.Cache
	31, // 29: workflow.MySQL.Sanitize:type_name -> workflow.MySQLImageSanitize
	29, // 30: workflow.MySQL.Image:type_name -> workflow.MySQLImage
	30, // 31: workflow.MySQLImage.Sanitize:type_name -> workflow.MySQLSanitize
	35, // 32: workflow.MySQLSanitize.Rewrite:type_name -> workflow.MySQLSanitizeRewrite
	39, // 33: workflow.MySQLSanitize.Where:type_name -> workflow.MySQLSanitizeWhere
	32, // 34: workflow.MySQLImageSanitize.Backup:type_name -> workflow.SanitizationPolicy
	32, // 35: workflow.MySQLImageSanitize.Image:type_name -> workflow.SanitizationPolicy
	33, // 36: workflow.SanitizationPolicy.Rules:type_name -> workflow.SanitizationRules
	34, // 37: workflow.SanitizationRules.Rewrite:type_name -> workflow.SanitizationRewrite
	40, // 38: workflow.SanitizationRules.Where:type_name -> workflow.SanitizationWhere
	37, // 39: workflow.SanitizationRewrite.Tables:type_name -> workflow.SanitizationRewriteItem
	36, // 40: workflow.MySQLSanitizeRewrite.Tables:type_name -> workflow.MySQLSanitizeRewriteTable
	3,  // 41: workflow.Proxy.Cache:type_name -> workflow.Cache
	42, // 42: workflow.Proxy.Target:type_name -> workflow.ProxyTarget
	43, // 43: workflow.ProxyTarget.Project:type_name -> workflow.ProxyTargetProject
	44, // 44: workflow.ProxyTarget.External:type_name -> workflow.ProxyTargetExternal
	46, // 45: workflow.ScheduledBackup.Volume:type_name -> workflow.ScheduleBackupVolume
	47, // 46: workflow.ScheduleBackupVolume.Paths:type_name -> workflow.ScheduleBackupVolumePaths
	52, // 47: workflow.Volume.Backup:type_name -> workflow.VolumeBackup
	53, // 48: workflow.VolumeBackup.Sanitize:type_name -> workflow.VolumeBackupSanitize
	54, // 49: workflow.VolumeBackupSanitize.Rules:type_name -> workflow.VolumeBackupSanitizeRules
	13, // 50: workflow.environment.Delete:input_type -> workflow.EnvironmentDeleteRequest
	15, // 51: workflow.environment.Get:input_type -> workflow.EnvironmentGetRequest
	17, // 52: workflow.environment.List:input_type -> workflow.EnvironmentListRequest
	11, // 53: workflow.environment.Create:input_type -> workflow.EnvironmentCreateRequest
	19, // 54: workflow.environment.Update:input_type -> workflow.EnvironmentUpdateRequest
	21, // 55: workflow.environment.Validate:input_type -> workflow.EnvironmentValidateRequest
	14, // 56: workflow.environment.Delete:output_type -> workflow.EnvironmentDeleteResponse
	16, // 57: workflow.environment.Get:output_type -> workflow.EnvironmentGetResponse
	18, // 58: workflow.environment.List:output_type -> workflow.EnvironmentListResponse
	12, // 59: workflow.environment.Create:output_type -> workflow.EnvironmentCreateResponse
	20, // 60: workflow.environment.Update:output_type -> workflow.EnvironmentUpdateResponse
	22, // 61: workflow.environment.Validate:output_type -> workflow.EnvironmentValidateResponse
	56, // [56:62] is the sub-list for method output_type
	50, // [50:56] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_environment_proto_init() }
func file_environment_proto_init() {
	if File_environment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_environment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cron); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Daemon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Environment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentResourcesReplicas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentResourcesCPU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentResourcesMemory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentValidateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentValidateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentValidateFinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorPages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ingress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySQL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySQLImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySQLSanitize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySQLImageSanitize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SanitizationPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SanitizationRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SanitizationRewrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySQLSanitizeRewrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySQLSanitizeRewriteTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SanitizationRewriteItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySQLSanitizeRewriteTableSanitizationRewrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySQLSanitizeWhere); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SanitizationWhere); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proxy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyTargetProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyTargetExternal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduledBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleBackupVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleBackupVolumePaths); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMTP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Solr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeBackupSanitize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeBackupSanitizeRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_environment_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentDashboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_environment_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   53,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_environment_proto_goTypes,
		DependencyIndexes: file_environment_proto_depIdxs,
		EnumInfos:         file_environment_proto_enumTypes,
		MessageInfos:      file_environment_proto_msgTypes,
	}.Build()
	File_environment_proto = out.File
	file_environment_proto_rawDesc = nil
	file_environment_proto_goTypes = nil
	file_environment_proto_depIdxs = nil
}
