//* Service responsible for coordinating environment MySQL

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: mysql.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImageStatus_Phase int32

const (
	ImageStatus_InProgress ImageStatus_Phase = 0 // Database image build is in progress
	ImageStatus_Completed  ImageStatus_Phase = 1 // Database image build is complete
	ImageStatus_Failed     ImageStatus_Phase = 2 // Database image failed
	ImageStatus_Unknown    ImageStatus_Phase = 3 // Database image is in an unknown state
)

// Enum value maps for ImageStatus_Phase.
var (
	ImageStatus_Phase_name = map[int32]string{
		0: "InProgress",
		1: "Completed",
		2: "Failed",
		3: "Unknown",
	}
	ImageStatus_Phase_value = map[string]int32{
		"InProgress": 0,
		"Completed":  1,
		"Failed":     2,
		"Unknown":    3,
	}
)

func (x ImageStatus_Phase) Enum() *ImageStatus_Phase {
	p := new(ImageStatus_Phase)
	*p = x
	return p
}

func (x ImageStatus_Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageStatus_Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_mysql_proto_enumTypes[0].Descriptor()
}

func (ImageStatus_Phase) Type() protoreflect.EnumType {
	return &file_mysql_proto_enumTypes[0]
}

func (x ImageStatus_Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageStatus_Phase.Descriptor instead.
func (ImageStatus_Phase) EnumDescriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{8, 0}
}

type MysqlBackupStatus_Phase int32

const (
	MysqlBackupStatus_InProgress MysqlBackupStatus_Phase = 0 // Database image build is in progress
	MysqlBackupStatus_Completed  MysqlBackupStatus_Phase = 1 // Database image build is complete
	MysqlBackupStatus_Failed     MysqlBackupStatus_Phase = 2 // Database image failed
	MysqlBackupStatus_Unknown    MysqlBackupStatus_Phase = 3 // Database image is in an unknown state
)

// Enum value maps for MysqlBackupStatus_Phase.
var (
	MysqlBackupStatus_Phase_name = map[int32]string{
		0: "InProgress",
		1: "Completed",
		2: "Failed",
		3: "Unknown",
	}
	MysqlBackupStatus_Phase_value = map[string]int32{
		"InProgress": 0,
		"Completed":  1,
		"Failed":     2,
		"Unknown":    3,
	}
)

func (x MysqlBackupStatus_Phase) Enum() *MysqlBackupStatus_Phase {
	p := new(MysqlBackupStatus_Phase)
	*p = x
	return p
}

func (x MysqlBackupStatus_Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MysqlBackupStatus_Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_mysql_proto_enumTypes[1].Descriptor()
}

func (MysqlBackupStatus_Phase) Type() protoreflect.EnumType {
	return &file_mysql_proto_enumTypes[1]
}

func (x MysqlBackupStatus_Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MysqlBackupStatus_Phase.Descriptor instead.
func (MysqlBackupStatus_Phase) EnumDescriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{15, 0}
}

type MysqlRestoreStatus_Phase int32

const (
	MysqlRestoreStatus_InProgress MysqlRestoreStatus_Phase = 0 // Database restore is in progress
	MysqlRestoreStatus_Completed  MysqlRestoreStatus_Phase = 1 // Database restore is complete
	MysqlRestoreStatus_Failed     MysqlRestoreStatus_Phase = 2 // Database restore failed
	MysqlRestoreStatus_Unknown    MysqlRestoreStatus_Phase = 3 // Database restore is in an unknown state
)

// Enum value maps for MysqlRestoreStatus_Phase.
var (
	MysqlRestoreStatus_Phase_name = map[int32]string{
		0: "InProgress",
		1: "Completed",
		2: "Failed",
		3: "Unknown",
	}
	MysqlRestoreStatus_Phase_value = map[string]int32{
		"InProgress": 0,
		"Completed":  1,
		"Failed":     2,
		"Unknown":    3,
	}
)

func (x MysqlRestoreStatus_Phase) Enum() *MysqlRestoreStatus_Phase {
	p := new(MysqlRestoreStatus_Phase)
	*p = x
	return p
}

func (x MysqlRestoreStatus_Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MysqlRestoreStatus_Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_mysql_proto_enumTypes[2].Descriptor()
}

func (MysqlRestoreStatus_Phase) Type() protoreflect.EnumType {
	return &file_mysql_proto_enumTypes[2]
}

func (x MysqlRestoreStatus_Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MysqlRestoreStatus_Phase.Descriptor instead.
func (MysqlRestoreStatus_Phase) EnumDescriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{22, 0}
}

// *
// Create a MySQL database image
type ImageCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string   `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Environment name
	Database    string   `protobuf:"bytes,2,opt,name=Database,proto3" json:"Database,omitempty"`       // Database to create an image for
	Policies    []string `protobuf:"bytes,3,rep,name=Policies,proto3" json:"Policies,omitempty"`       // Policies to apply
	Tag         string   `protobuf:"bytes,4,opt,name=Tag,proto3" json:"Tag,omitempty"`                 // Tags to apply
}

func (x *ImageCreateRequest) Reset() {
	*x = ImageCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageCreateRequest) ProtoMessage() {}

func (x *ImageCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageCreateRequest.ProtoReflect.Descriptor instead.
func (*ImageCreateRequest) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{0}
}

func (x *ImageCreateRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *ImageCreateRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ImageCreateRequest) GetPolicies() []string {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *ImageCreateRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

// *
// Response of image build
type ImageCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []*ImageStatus `protobuf:"bytes,1,rep,name=Images,proto3" json:"Images,omitempty"` // Images associated with build
}

func (x *ImageCreateResponse) Reset() {
	*x = ImageCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageCreateResponse) ProtoMessage() {}

func (x *ImageCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageCreateResponse.ProtoReflect.Descriptor instead.
func (*ImageCreateResponse) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{1}
}

func (x *ImageCreateResponse) GetImages() []*ImageStatus {
	if x != nil {
		return x.Images
	}
	return nil
}

// *
// Get MySQL image details
type ImageGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"` // ID of the image
}

func (x *ImageGetRequest) Reset() {
	*x = ImageGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageGetRequest) ProtoMessage() {}

func (x *ImageGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageGetRequest.ProtoReflect.Descriptor instead.
func (*ImageGetRequest) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{2}
}

func (x *ImageGetRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

// *
// MySQL database image information
type ImageGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mysql *ImageStatus `protobuf:"bytes,1,opt,name=Mysql,proto3" json:"Mysql,omitempty"` // MySQL information
}

func (x *ImageGetResponse) Reset() {
	*x = ImageGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageGetResponse) ProtoMessage() {}

func (x *ImageGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageGetResponse.ProtoReflect.Descriptor instead.
func (*ImageGetResponse) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{3}
}

func (x *ImageGetResponse) GetMysql() *ImageStatus {
	if x != nil {
		return x.Mysql
	}
	return nil
}

// *
// List of images for an environment
type ImageListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Name of environment
}

func (x *ImageListRequest) Reset() {
	*x = ImageListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageListRequest) ProtoMessage() {}

func (x *ImageListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageListRequest.ProtoReflect.Descriptor instead.
func (*ImageListRequest) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{4}
}

func (x *ImageListRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Images for an environment
type ImageListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ImageStatus `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"` // List of images
}

func (x *ImageListResponse) Reset() {
	*x = ImageListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageListResponse) ProtoMessage() {}

func (x *ImageListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageListResponse.ProtoReflect.Descriptor instead.
func (*ImageListResponse) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{5}
}

func (x *ImageListResponse) GetList() []*ImageStatus {
	if x != nil {
		return x.List
	}
	return nil
}

// *
// Get repository information for environment.
type ImageGetRepositoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Name of environment
}

func (x *ImageGetRepositoryRequest) Reset() {
	*x = ImageGetRepositoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageGetRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageGetRepositoryRequest) ProtoMessage() {}

func (x *ImageGetRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageGetRepositoryRequest.ProtoReflect.Descriptor instead.
func (*ImageGetRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{6}
}

func (x *ImageGetRepositoryRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Repository information for environment.
type ImageGetRepositoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repository string `protobuf:"bytes,1,opt,name=Repository,proto3" json:"Repository,omitempty"`
}

func (x *ImageGetRepositoryResponse) Reset() {
	*x = ImageGetRepositoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageGetRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageGetRepositoryResponse) ProtoMessage() {}

func (x *ImageGetRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageGetRepositoryResponse.ProtoReflect.Descriptor instead.
func (*ImageGetRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{7}
}

func (x *ImageGetRepositoryResponse) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

// *
// Image information
type ImageStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             string            `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`                                        // ID of the database image
	Phase          ImageStatus_Phase `protobuf:"varint,2,opt,name=phase,proto3,enum=workflow.ImageStatus_Phase" json:"phase,omitempty"` // Phase the database build is in
	StartTime      string            `protobuf:"bytes,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"`                          // When the database image build started
	CompletionTime string            `protobuf:"bytes,4,opt,name=CompletionTime,proto3" json:"CompletionTime,omitempty"`                // When the database image build completed
	Duration       string            `protobuf:"bytes,5,opt,name=Duration,proto3" json:"Duration,omitempty"`                            // How long the database image build took
	Tags           []string          `protobuf:"bytes,6,rep,name=Tags,proto3" json:"Tags,omitempty"`                                    // Tags to applied to the database image
}

func (x *ImageStatus) Reset() {
	*x = ImageStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageStatus) ProtoMessage() {}

func (x *ImageStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageStatus.ProtoReflect.Descriptor instead.
func (*ImageStatus) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{8}
}

func (x *ImageStatus) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ImageStatus) GetPhase() ImageStatus_Phase {
	if x != nil {
		return x.Phase
	}
	return ImageStatus_InProgress
}

func (x *ImageStatus) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ImageStatus) GetCompletionTime() string {
	if x != nil {
		return x.CompletionTime
	}
	return ""
}

func (x *ImageStatus) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *ImageStatus) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// *
// Request a list of MySQL databases
type MysqlListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Environment name
}

func (x *MysqlListRequest) Reset() {
	*x = MysqlListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysqlListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlListRequest) ProtoMessage() {}

func (x *MysqlListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlListRequest.ProtoReflect.Descriptor instead.
func (*MysqlListRequest) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{9}
}

func (x *MysqlListRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Returns a list of databases
type MysqlListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*MysqlBackupStatus `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"` // List of databsaes
}

func (x *MysqlListResponse) Reset() {
	*x = MysqlListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysqlListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlListResponse) ProtoMessage() {}

func (x *MysqlListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlListResponse.ProtoReflect.Descriptor instead.
func (*MysqlListResponse) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{10}
}

func (x *MysqlListResponse) GetList() []*MysqlBackupStatus {
	if x != nil {
		return x.List
	}
	return nil
}

// *
// Create a MySQL backup
type MysqlBackupCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment  string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"`   // Environment name
	DatabaseName string `protobuf:"bytes,2,opt,name=DatabaseName,proto3" json:"DatabaseName,omitempty"` // Database name
}

func (x *MysqlBackupCreateRequest) Reset() {
	*x = MysqlBackupCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysqlBackupCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlBackupCreateRequest) ProtoMessage() {}

func (x *MysqlBackupCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlBackupCreateRequest.ProtoReflect.Descriptor instead.
func (*MysqlBackupCreateRequest) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{11}
}

func (x *MysqlBackupCreateRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *MysqlBackupCreateRequest) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

// *
// Returns details of MySQL backup
type MysqlBackupCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"` // ID of the backup
}

func (x *MysqlBackupCreateResponse) Reset() {
	*x = MysqlBackupCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysqlBackupCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlBackupCreateResponse) ProtoMessage() {}

func (x *MysqlBackupCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlBackupCreateResponse.ProtoReflect.Descriptor instead.
func (*MysqlBackupCreateResponse) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{12}
}

func (x *MysqlBackupCreateResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

// *
// Image information
type MysqlBackupGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`                     // ID of the backup
	DatabaseName string `protobuf:"bytes,2,opt,name=DatabaseName,proto3" json:"DatabaseName,omitempty"` // Name of the database
}

func (x *MysqlBackupGetRequest) Reset() {
	*x = MysqlBackupGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysqlBackupGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlBackupGetRequest) ProtoMessage() {}

func (x *MysqlBackupGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlBackupGetRequest.ProtoReflect.Descriptor instead.
func (*MysqlBackupGetRequest) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{13}
}

func (x *MysqlBackupGetRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *MysqlBackupGetRequest) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

// *
// Returns MySQL backup details
type MysqlBackupGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MysqlBackup *MysqlBackupStatus `protobuf:"bytes,1,opt,name=MysqlBackup,proto3" json:"MysqlBackup,omitempty"` // MySQL backup details
}

func (x *MysqlBackupGetResponse) Reset() {
	*x = MysqlBackupGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysqlBackupGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlBackupGetResponse) ProtoMessage() {}

func (x *MysqlBackupGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlBackupGetResponse.ProtoReflect.Descriptor instead.
func (*MysqlBackupGetResponse) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{14}
}

func (x *MysqlBackupGetResponse) GetMysqlBackup() *MysqlBackupStatus {
	if x != nil {
		return x.MysqlBackup
	}
	return nil
}

// *
// MySQL backup status
type MysqlBackupStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                  `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                                          // Name of the backup
	Phase          MysqlBackupStatus_Phase `protobuf:"varint,2,opt,name=phase,proto3,enum=workflow.MysqlBackupStatus_Phase" json:"phase,omitempty"` // Phase the backup
	StartTime      string                  `protobuf:"bytes,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"`                                // Start time of the backup
	CompletionTime string                  `protobuf:"bytes,4,opt,name=CompletionTime,proto3" json:"CompletionTime,omitempty"`                      // Completion time of the backup
	Duration       string                  `protobuf:"bytes,5,opt,name=Duration,proto3" json:"Duration,omitempty"`                                  // How long the backup took
	Database       string                  `protobuf:"bytes,6,opt,name=Database,proto3" json:"Database,omitempty"`                                  // Database that was involved
	BackupID       string                  `protobuf:"bytes,7,opt,name=BackupID,proto3" json:"BackupID,omitempty"`                                  // ID of the backup
}

func (x *MysqlBackupStatus) Reset() {
	*x = MysqlBackupStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysqlBackupStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlBackupStatus) ProtoMessage() {}

func (x *MysqlBackupStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlBackupStatus.ProtoReflect.Descriptor instead.
func (*MysqlBackupStatus) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{15}
}

func (x *MysqlBackupStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MysqlBackupStatus) GetPhase() MysqlBackupStatus_Phase {
	if x != nil {
		return x.Phase
	}
	return MysqlBackupStatus_InProgress
}

func (x *MysqlBackupStatus) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *MysqlBackupStatus) GetCompletionTime() string {
	if x != nil {
		return x.CompletionTime
	}
	return ""
}

func (x *MysqlBackupStatus) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *MysqlBackupStatus) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *MysqlBackupStatus) GetBackupID() string {
	if x != nil {
		return x.BackupID
	}
	return ""
}

// *
// Get a list of restores for an environment
type MysqlRestoreListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"` // Name of the environment
}

func (x *MysqlRestoreListRequest) Reset() {
	*x = MysqlRestoreListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysqlRestoreListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlRestoreListRequest) ProtoMessage() {}

func (x *MysqlRestoreListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlRestoreListRequest.ProtoReflect.Descriptor instead.
func (*MysqlRestoreListRequest) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{16}
}

func (x *MysqlRestoreListRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

// *
// Returns a list of restores
type MysqlRestoreListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*MysqlRestoreStatus `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"` // List of restores
}

func (x *MysqlRestoreListResponse) Reset() {
	*x = MysqlRestoreListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysqlRestoreListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlRestoreListResponse) ProtoMessage() {}

func (x *MysqlRestoreListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlRestoreListResponse.ProtoReflect.Descriptor instead.
func (*MysqlRestoreListResponse) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{17}
}

func (x *MysqlRestoreListResponse) GetList() []*MysqlRestoreStatus {
	if x != nil {
		return x.List
	}
	return nil
}

// *
// Create a restore
type MysqlRestoreCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment  string `protobuf:"bytes,1,opt,name=Environment,proto3" json:"Environment,omitempty"`   // Name of the environment
	Backup       string `protobuf:"bytes,2,opt,name=Backup,proto3" json:"Backup,omitempty"`             // Backup to use for restore
	DatabaseName string `protobuf:"bytes,3,opt,name=DatabaseName,proto3" json:"DatabaseName,omitempty"` // Database name
}

func (x *MysqlRestoreCreateRequest) Reset() {
	*x = MysqlRestoreCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysqlRestoreCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlRestoreCreateRequest) ProtoMessage() {}

func (x *MysqlRestoreCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlRestoreCreateRequest.ProtoReflect.Descriptor instead.
func (*MysqlRestoreCreateRequest) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{18}
}

func (x *MysqlRestoreCreateRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *MysqlRestoreCreateRequest) GetBackup() string {
	if x != nil {
		return x.Backup
	}
	return ""
}

func (x *MysqlRestoreCreateRequest) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

// *
// Returns a restore ID if succesful
type MysqlRestoreCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"` // ID of the restore
}

func (x *MysqlRestoreCreateResponse) Reset() {
	*x = MysqlRestoreCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysqlRestoreCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlRestoreCreateResponse) ProtoMessage() {}

func (x *MysqlRestoreCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlRestoreCreateResponse.ProtoReflect.Descriptor instead.
func (*MysqlRestoreCreateResponse) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{19}
}

func (x *MysqlRestoreCreateResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

// *
// Request the latest restore information
type MysqlRestoreGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"` // ID of the restore
}

func (x *MysqlRestoreGetRequest) Reset() {
	*x = MysqlRestoreGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysqlRestoreGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlRestoreGetRequest) ProtoMessage() {}

func (x *MysqlRestoreGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlRestoreGetRequest.ProtoReflect.Descriptor instead.
func (*MysqlRestoreGetRequest) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{20}
}

func (x *MysqlRestoreGetRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

// *
// Returns a list of restores
type MysqlRestoreGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MysqlRestore *MysqlRestoreStatus `protobuf:"bytes,1,opt,name=MysqlRestore,proto3" json:"MysqlRestore,omitempty"` // Restore information
}

func (x *MysqlRestoreGetResponse) Reset() {
	*x = MysqlRestoreGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysqlRestoreGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlRestoreGetResponse) ProtoMessage() {}

func (x *MysqlRestoreGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlRestoreGetResponse.ProtoReflect.Descriptor instead.
func (*MysqlRestoreGetResponse) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{21}
}

func (x *MysqlRestoreGetResponse) GetMysqlRestore() *MysqlRestoreStatus {
	if x != nil {
		return x.MysqlRestore
	}
	return nil
}

// *
// Status of a restore
type MysqlRestoreStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                                           // Name of the database
	RestoreID      string                   `protobuf:"bytes,2,opt,name=RestoreID,proto3" json:"RestoreID,omitempty"`                                 // ID of the restore
	Phase          MysqlRestoreStatus_Phase `protobuf:"varint,3,opt,name=phase,proto3,enum=workflow.MysqlRestoreStatus_Phase" json:"phase,omitempty"` // Phase of the database restore
	StartTime      string                   `protobuf:"bytes,4,opt,name=StartTime,proto3" json:"StartTime,omitempty"`                                 // Start time of the restore
	CompletionTime string                   `protobuf:"bytes,5,opt,name=CompletionTime,proto3" json:"CompletionTime,omitempty"`                       // Completion time of the restore
	Duration       string                   `protobuf:"bytes,6,opt,name=Duration,proto3" json:"Duration,omitempty"`                                   // Duration of the restore
	Database       string                   `protobuf:"bytes,7,opt,name=Database,proto3" json:"Database,omitempty"`                                   // Name of the database
	BackupID       string                   `protobuf:"bytes,8,opt,name=BackupID,proto3" json:"BackupID,omitempty"`                                   // Backup ID used during the restore
}

func (x *MysqlRestoreStatus) Reset() {
	*x = MysqlRestoreStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mysql_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysqlRestoreStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysqlRestoreStatus) ProtoMessage() {}

func (x *MysqlRestoreStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mysql_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysqlRestoreStatus.ProtoReflect.Descriptor instead.
func (*MysqlRestoreStatus) Descriptor() ([]byte, []int) {
	return file_mysql_proto_rawDescGZIP(), []int{22}
}

func (x *MysqlRestoreStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MysqlRestoreStatus) GetRestoreID() string {
	if x != nil {
		return x.RestoreID
	}
	return ""
}

func (x *MysqlRestoreStatus) GetPhase() MysqlRestoreStatus_Phase {
	if x != nil {
		return x.Phase
	}
	return MysqlRestoreStatus_InProgress
}

func (x *MysqlRestoreStatus) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *MysqlRestoreStatus) GetCompletionTime() string {
	if x != nil {
		return x.CompletionTime
	}
	return ""
}

func (x *MysqlRestoreStatus) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *MysqlRestoreStatus) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *MysqlRestoreStatus) GetBackupID() string {
	if x != nil {
		return x.BackupID
	}
	return ""
}

var File_mysql_proto protoreflect.FileDescriptor

var file_mysql_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0x80, 0x01, 0x0a, 0x12, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67, 0x22, 0x44, 0x0a, 0x13, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x21, 0x0a, 0x0f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x3f, 0x0a, 0x10, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x4d, 0x79, 0x73, 0x71, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x4d,
	0x79, 0x73, 0x71, 0x6c, 0x22, 0x34, 0x0a, 0x10, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x11, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x19, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x1a, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x87, 0x02, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73,
	0x22, 0x3f, 0x0a, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x6e, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10,
	0x03, 0x22, 0x34, 0x0a, 0x10, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x11, 0x4d, 0x79, 0x73, 0x71, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x60, 0x0a,
	0x18, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x2b, 0x0a, 0x19, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x4b, 0x0a, 0x15,
	0x4d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x16, 0x4d, 0x79, 0x73,
	0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x22, 0xbb, 0x02, 0x0a, 0x11, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x05,
	0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05,
	0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x44, 0x22,
	0x3f, 0x0a, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x6e, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x03,
	0x22, 0x3b, 0x0a, 0x17, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4c, 0x0a,
	0x18, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x79, 0x0a, 0x19, 0x4d,
	0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x1a, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x22, 0x28, 0x0a, 0x16, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x5b,
	0x0a, 0x17, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x4d, 0x79, 0x73,
	0x71, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c,
	0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x4d,
	0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0xdb, 0x02, 0x0a, 0x12,
	0x4d, 0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d,
	0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x44, 0x22, 0x3f, 0x0a, 0x05, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x03, 0x32, 0xc6, 0x06, 0x0a, 0x05, 0x6d, 0x79,
	0x73, 0x71, 0x6c, 0x12, 0x4c, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x12, 0x19, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61,
	0x0a, 0x12, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x0a, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x09, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x47,
	0x65, 0x74, 0x12, 0x1f, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79,
	0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d,
	0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5c, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x23, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x73, 0x71,
	0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a,
	0x0a, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x47, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x52, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_mysql_proto_rawDescOnce sync.Once
	file_mysql_proto_rawDescData = file_mysql_proto_rawDesc
)

func file_mysql_proto_rawDescGZIP() []byte {
	file_mysql_proto_rawDescOnce.Do(func() {
		file_mysql_proto_rawDescData = protoimpl.X.CompressGZIP(file_mysql_proto_rawDescData)
	})
	return file_mysql_proto_rawDescData
}

var file_mysql_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_mysql_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_mysql_proto_goTypes = []interface{}{
	(ImageStatus_Phase)(0),             // 0: workflow.ImageStatus.Phase
	(MysqlBackupStatus_Phase)(0),       // 1: workflow.MysqlBackupStatus.Phase
	(MysqlRestoreStatus_Phase)(0),      // 2: workflow.MysqlRestoreStatus.Phase
	(*ImageCreateRequest)(nil),         // 3: workflow.ImageCreateRequest
	(*ImageCreateResponse)(nil),        // 4: workflow.ImageCreateResponse
	(*ImageGetRequest)(nil),            // 5: workflow.ImageGetRequest
	(*ImageGetResponse)(nil),           // 6: workflow.ImageGetResponse
	(*ImageListRequest)(nil),           // 7: workflow.ImageListRequest
	(*ImageListResponse)(nil),          // 8: workflow.ImageListResponse
	(*ImageGetRepositoryRequest)(nil),  // 9: workflow.ImageGetRepositoryRequest
	(*ImageGetRepositoryResponse)(nil), // 10: workflow.ImageGetRepositoryResponse
	(*ImageStatus)(nil),                // 11: workflow.ImageStatus
	(*MysqlListRequest)(nil),           // 12: workflow.MysqlListRequest
	(*MysqlListResponse)(nil),          // 13: workflow.MysqlListResponse
	(*MysqlBackupCreateRequest)(nil),   // 14: workflow.MysqlBackupCreateRequest
	(*MysqlBackupCreateResponse)(nil),  // 15: workflow.MysqlBackupCreateResponse
	(*MysqlBackupGetRequest)(nil),      // 16: workflow.MysqlBackupGetRequest
	(*MysqlBackupGetResponse)(nil),     // 17: workflow.MysqlBackupGetResponse
	(*MysqlBackupStatus)(nil),          // 18: workflow.MysqlBackupStatus
	(*MysqlRestoreListRequest)(nil),    // 19: workflow.MysqlRestoreListRequest
	(*MysqlRestoreListResponse)(nil),   // 20: workflow.MysqlRestoreListResponse
	(*MysqlRestoreCreateRequest)(nil),  // 21: workflow.MysqlRestoreCreateRequest
	(*MysqlRestoreCreateResponse)(nil), // 22: workflow.MysqlRestoreCreateResponse
	(*MysqlRestoreGetRequest)(nil),     // 23: workflow.MysqlRestoreGetRequest
	(*MysqlRestoreGetResponse)(nil),    // 24: workflow.MysqlRestoreGetResponse
	(*MysqlRestoreStatus)(nil),         // 25: workflow.MysqlRestoreStatus
}
var file_mysql_proto_depIdxs = []int32{
	11, // 0: workflow.ImageCreateResponse.Images:type_name -> workflow.ImageStatus
	11, // 1: workflow.ImageGetResponse.Mysql:type_name -> workflow.ImageStatus
	11, // 2: workflow.ImageListResponse.List:type_name -> workflow.ImageStatus
	0,  // 3: workflow.ImageStatus.phase:type_name -> workflow.ImageStatus.Phase
	18, // 4: workflow.MysqlListResponse.List:type_name -> workflow.MysqlBackupStatus
	18, // 5: workflow.MysqlBackupGetResponse.MysqlBackup:type_name -> workflow.MysqlBackupStatus
	1,  // 6: workflow.MysqlBackupStatus.phase:type_name -> workflow.MysqlBackupStatus.Phase
	25, // 7: workflow.MysqlRestoreListResponse.List:type_name -> workflow.MysqlRestoreStatus
	25, // 8: workflow.MysqlRestoreGetResponse.MysqlRestore:type_name -> workflow.MysqlRestoreStatus
	2,  // 9: workflow.MysqlRestoreStatus.phase:type_name -> workflow.MysqlRestoreStatus.Phase
	3,  // 10: workflow.mysql.ImageCreate:input_type -> workflow.ImageCreateRequest
	5,  // 11: workflow.mysql.ImageGet:input_type -> workflow.ImageGetRequest
	7,  // 12: workflow.mysql.ImageList:input_type -> workflow.ImageListRequest
	9,  // 13: workflow.mysql.ImageGetRepository:input_type -> workflow.ImageGetRepositoryRequest
	12, // 14: workflow.mysql.BackupList:input_type -> workflow.MysqlListRequest
	14, // 15: workflow.mysql.BackupCreate:input_type -> workflow.MysqlBackupCreateRequest
	16, // 16: workflow.mysql.BackupGet:input_type -> workflow.MysqlBackupGetRequest
	19, // 17: workflow.mysql.RestoreList:input_type -> workflow.MysqlRestoreListRequest
	21, // 18: workflow.mysql.RestoreCreate:input_type -> workflow.MysqlRestoreCreateRequest
	23, // 19: workflow.mysql.RestoreGet:input_type -> workflow.MysqlRestoreGetRequest
	4,  // 20: workflow.mysql.ImageCreate:output_type -> workflow.ImageCreateResponse
	6,  // 21: workflow.mysql.ImageGet:output_type -> workflow.ImageGetResponse
	8,  // 22: workflow.mysql.ImageList:output_type -> workflow.ImageListResponse
	10, // 23: workflow.mysql.ImageGetRepository:output_type -> workflow.ImageGetRepositoryResponse
	13, // 24: workflow.mysql.BackupList:output_type -> workflow.MysqlListResponse
	15, // 25: workflow.mysql.BackupCreate:output_type -> workflow.MysqlBackupCreateResponse
	17, // 26: workflow.mysql.BackupGet:output_type -> workflow.MysqlBackupGetResponse
	20, // 27: workflow.mysql.RestoreList:output_type -> workflow.MysqlRestoreListResponse
	22, // 28: workflow.mysql.RestoreCreate:output_type -> workflow.MysqlRestoreCreateResponse
	24, // 29: workflow.mysql.RestoreGet:output_type -> workflow.MysqlRestoreGetResponse
	20, // [20:30] is the sub-list for method output_type
	10, // [10:20] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_mysql_proto_init() }
func file_mysql_proto_init() {
	if File_mysql_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mysql_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageGetRepositoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageGetRepositoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysqlListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysqlListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysqlBackupCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysqlBackupCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysqlBackupGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysqlBackupGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysqlBackupStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysqlRestoreListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysqlRestoreListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysqlRestoreCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysqlRestoreCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysqlRestoreGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysqlRestoreGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mysql_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MysqlRestoreStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mysql_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mysql_proto_goTypes,
		DependencyIndexes: file_mysql_proto_depIdxs,
		EnumInfos:         file_mysql_proto_enumTypes,
		MessageInfos:      file_mysql_proto_msgTypes,
	}.Build()
	File_mysql_proto = out.File
	file_mysql_proto_rawDesc = nil
	file_mysql_proto_goTypes = nil
	file_mysql_proto_depIdxs = nil
}
